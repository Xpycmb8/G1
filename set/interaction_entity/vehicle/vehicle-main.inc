{"vehicle"
	{inflammation_time 25}
	{on spawn
		{add_view	"stop_signal"									"stop_signal"			"FXstop1"}
		{add_view	"stop_signal"									"stop_signal"			"FXstop2"}
		{add_view	"stop_signal_linear"							"stop_signal_linear"	"FXstop1"}
		{add_view	"stop_signal_linear"							"stop_signal_linear"	"FXstop2"}

		{add_view	"fx_lamp_red_led_stop_nolight"					"stop_signal"			"stop_light_up_nolight"}
		{add_view	"fx_lamp_red_led_stop_nolight"					"stop_signal"			"stop_light_b_r_nolight"}
		{add_view	"fx_lamp_red_led_stop_nolight"					"stop_signal"			"stop_light_b_l_nolight"}

		{add_view	"stop_signal"									"stop_signal"			"stop_light_b_l"}
		{add_view	"stop_signal"									"stop_signal"			"stop_light_b_r"}
		{add_view	"stop_signal_linear"							"stop_signal_linear"	"stop_light_b_l"}
		{add_view	"stop_signal_linear"							"stop_signal_linear"	"stop_light_b_r"}
		{add_view 	"light_plafond_dim"		"redlight"			"FXlight1"}
		{add_view 	"light_plafond_dim"		"redlight"			"FXlight2"}
		{add_view 	"headlight_3000k_small"					"light_second"			"headlightL_s_3000k_small"};линзы small
		{add_view 	"headlight_3000k_small"					"light_second"			"headlightR_s_3000k_small"}
		{add_view 	"headlight_2500k_small"					"light_main"			"headlightr_m_2500k_small"}				
		{add_view 	"headlight_2500k_small"					"light_main"			"headlightl_m_2500k_small"}				
		{add_view 	"headlight_2500k_small"					"light_second"			"headlightl_s_2500k_small"}				
		{add_view 	"headlight_2500k_small"					"light_second"			"headlightr_s_2500k_small"}				
		{add_view 	"headlight_2500k_small"					"light_back"			"headlightr_b_2500k_small"}				
		{add_view 	"headlight_2500k_small"					"light_back"			"headlightl_b_2500k_small"}				
		{add_view 	"headlight_2500k_med"					"light_main"			"headlightr_m_2500k_med"}				
		{add_view 	"headlight_2500k_med"					"light_main"			"headlightl_m_2500k_med"}				
		{add_view 	"headlight_2500k_med"					"light_second"			"headlightl_s_2500k_med"}				
		{add_view 	"headlight_2500k_med"					"light_second"			"headlightr_s_2500k_med"}				
		{add_view 	"headlight_2500k_med"					"light_back"			"headlightr_b_2500k_med"}				
		{add_view 	"headlight_2500k_med"					"light_back"			"headlightl_b_2500k_med"}				
		{add_view 	"headlight_2500k_big"					"light_main"			"headlightr_m_2500k_big"}				
		{add_view 	"headlight_2500k_big"					"light_main"			"headlightl_m_2500k_big"}				
		{add_view 	"headlight_2500k_big"					"light_second"			"headlightl_s_2500k_big"}				
		{add_view 	"headlight_2500k_big"					"light_second"			"headlightr_s_2500k_big"}				
		{add_view 	"headlight_2500k_big"					"light_back"			"headlightr_b_2500k_big"}				
		{add_view 	"headlight_2500k_big"					"light_back"			"headlightl_b_2500k_big"}				
		{add_view 	"headlight_6000k_small"					"light_main"			"headlightr_m_6000k_small"}				
		{add_view 	"headlight_6000k_small"					"light_main"			"headlightl_m_6000k_small"}				
		{add_view 	"headlight_6000k_small"					"light_second"			"headlightl_s_6000k_small"}				
		{add_view 	"headlight_6000k_small"					"light_second"			"headlightr_s_6000k_small"}				
		{add_view 	"headlight_6000k_small"					"light_back"			"headlightr_b_6000k_small"}				
		{add_view 	"headlight_6000k_small"					"light_back"			"headlightl_b_6000k_small"}				
		{add_view 	"headlight_6000k_med"					"light_main"			"headlightr_m_6000k_med"}				
		{add_view 	"headlight_6000k_med"					"light_main"			"headlightl_m_6000k_med"}				
		{add_view 	"headlight_6000k_med"					"light_second"			"headlightl_s_6000k_med"}				
		{add_view 	"headlight_6000k_med"					"light_second"			"headlightr_s_6000k_med"}				
		{add_view 	"headlight_6000k_med"					"light_back"			"headlightr_b_6000k_med"}				
		{add_view 	"headlight_6000k_med"					"light_back"			"headlightl_b_6000k_med"}				
		{add_view 	"headlight_6000k_big"					"light_main"			"headlightr_m_6000k_big"}				
		{add_view 	"headlight_6000k_big"					"light_main"			"headlightl_m_6000k_big"}				
		{add_view 	"headlight_6000k_big"					"light_second"			"headlightl_s_6000k_big"}				
		{add_view 	"headlight_6000k_big"					"light_second"			"headlightr_s_6000k_big"}				
		{add_view 	"headlight_6000k_big"					"light_back"			"headlightr_b_6000k_big"}				
		{add_view 	"headlight_6000k_big"					"light_back"			"headlightl_b_6000k_big"}				
		{add_view 	"headlight_led6000k_small"					"light_main"			"headlightr_m_led6000k_small"}				
		{add_view 	"headlight_led6000k_small"					"light_main"			"headlightl_m_led6000k_small"}				
		{add_view 	"headlight_led6000k_small"					"light_second"			"headlightl_s_led6000k_small"}				
		{add_view 	"headlight_led6000k_small"					"light_second"			"headlightr_s_led6000k_small"}				
		{add_view 	"headlight_led6000k_small"					"light_back"			"headlightr_b_led6000k_small"}				
		{add_view 	"headlight_led6000k_small"					"light_back"			"headlightl_b_led6000k_small"}				
		{add_view 	"headlight_led6000k_med"					"light_main"			"headlightr_m_led6000k_med"}				
		{add_view 	"headlight_led6000k_med"					"light_main"			"headlightl_m_led6000k_med"}				
		{add_view 	"headlight_led6000k_med"					"light_second"			"headlightl_s_led6000k_med"}				
		{add_view 	"headlight_led6000k_med"					"light_second"			"headlightr_s_led6000k_med"}				
		{add_view 	"headlight_led6000k_med"					"light_back"			"headlightr_b_led6000k_med"}				
		{add_view 	"headlight_led6000k_med"					"light_back"			"headlightl_b_led6000k_med"}				
		{add_view 	"headlight_led6000k_big"					"light_main"			"headlightr_m_led6000k_big"}				
		{add_view 	"headlight_led6000k_big"					"light_main"			"headlightl_m_led6000k_big"}				
		{add_view 	"headlight_led6000k_big"					"light_second"			"headlightl_s_led6000k_big"}				
		{add_view 	"headlight_led6000k_big"					"light_second"			"headlightr_s_led6000k_big"}				
		{add_view 	"headlight_led6000k_big"					"light_back"			"headlightr_b_led6000k_big"}				
		{add_view 	"headlight_led6000k_big"					"light_back"			"headlightl_b_led6000k_big"}

		{add_view 	"headlight_3000k_small_stop"				"light_second_stop"			"headlightL_s_3000k_small"};линзы small
		{add_view 	"headlight_3000k_small_stop"				"light_second_stop"			"headlightR_s_3000k_small"}
		{add_view 	"headlight_2500k_small_stop"				"light_main_stop"			"headlightr_m_2500k_small"}				
		{add_view 	"headlight_2500k_small_stop"				"light_main_stop"			"headlightl_m_2500k_small"}				
		{add_view 	"headlight_2500k_small_stop"				"light_second_stop"			"headlightl_s_2500k_small"}				
		{add_view 	"headlight_2500k_small_stop"				"light_second_stop"			"headlightr_s_2500k_small"}				
		{add_view 	"headlight_2500k_small_stop"				"light_back_stop"			"headlightr_b_2500k_small"}				
		{add_view 	"headlight_2500k_small_stop"				"light_back_stop"			"headlightl_b_2500k_small"}				
		{add_view 	"headlight_2500k_med_stop"					"light_main_stop"			"headlightr_m_2500k_med"}				
		{add_view 	"headlight_2500k_med_stop"					"light_main_stop"			"headlightl_m_2500k_med"}				
		{add_view 	"headlight_2500k_med_stop"					"light_second_stop"			"headlightl_s_2500k_med"}				
		{add_view 	"headlight_2500k_med_stop"					"light_second_stop"			"headlightr_s_2500k_med"}				
		{add_view 	"headlight_2500k_med_stop"					"light_back_stop"			"headlightr_b_2500k_med"}				
		{add_view 	"headlight_2500k_med_stop"					"light_back_stop"			"headlightl_b_2500k_med"}				
		{add_view 	"headlight_2500k_big_stop"					"light_main_stop"			"headlightr_m_2500k_big"}				
		{add_view 	"headlight_2500k_big_stop"					"light_main_stop"			"headlightl_m_2500k_big"}				
		{add_view 	"headlight_2500k_big_stop"					"light_second_stop"			"headlightl_s_2500k_big"}				
		{add_view 	"headlight_2500k_big_stop"					"light_second_stop"			"headlightr_s_2500k_big"}				
		{add_view 	"headlight_2500k_big_stop"					"light_back_stop"			"headlightr_b_2500k_big"}				
		{add_view 	"headlight_2500k_big_stop"					"light_back_stop"			"headlightl_b_2500k_big"}				
		{add_view 	"headlight_6000k_small_stop"				"light_main_stop"			"headlightr_m_6000k_small"}				
		{add_view 	"headlight_6000k_small_stop"				"light_main_stop"			"headlightl_m_6000k_small"}				
		{add_view 	"headlight_6000k_small_stop"				"light_second_stop"			"headlightl_s_6000k_small"}				
		{add_view 	"headlight_6000k_small_stop"				"light_second_stop"			"headlightr_s_6000k_small"}				
		{add_view 	"headlight_6000k_small_stop"				"light_back_stop"			"headlightr_b_6000k_small"}				
		{add_view 	"headlight_6000k_small_stop"				"light_back_stop"			"headlightl_b_6000k_small"}				
		{add_view 	"headlight_6000k_med_stop"					"light_main_stop"			"headlightr_m_6000k_med"}				
		{add_view 	"headlight_6000k_med_stop"					"light_main_stop"			"headlightl_m_6000k_med"}				
		{add_view 	"headlight_6000k_med_stop"					"light_second_stop"			"headlightl_s_6000k_med"}				
		{add_view 	"headlight_6000k_med_stop"					"light_second_stop"			"headlightr_s_6000k_med"}				
		{add_view 	"headlight_6000k_med_stop"					"light_back_stop"			"headlightr_b_6000k_med"}				
		{add_view 	"headlight_6000k_med_stop"					"light_back_stop"			"headlightl_b_6000k_med"}				
		{add_view 	"headlight_6000k_big_stop"					"light_main_stop"			"headlightr_m_6000k_big"}				
		{add_view 	"headlight_6000k_big_stop"					"light_main_stop"			"headlightl_m_6000k_big"}				
		{add_view 	"headlight_6000k_big_stop"					"light_second_stop"			"headlightl_s_6000k_big"}				
		{add_view 	"headlight_6000k_big_stop"					"light_second_stop"			"headlightr_s_6000k_big"}				
		{add_view 	"headlight_6000k_big_stop"					"light_back_stop"			"headlightr_b_6000k_big"}				
		{add_view 	"headlight_6000k_big_stop"					"light_back_stop"			"headlightl_b_6000k_big"}				

		{bone hide	"light_dxo_add"}

	
		{bone hide	"stop_light"}
		{bone hide	"stop_light_up_nolight"}
		{bone hide	"stop_light_up"}
		{bone hide	"stop_light_l"}
		{bone hide	"stop_light_r"}
		{bone hide	"stop_light_up_add"}
		{bone hide	"stop_light_l_add"}
		{bone hide	"stop_light_r_add"}
		{bone hide	"glass_f_m_l_add"}
		{bone hide	"glass_f_m_r_add"}

		{bone hide	"glass_b_m_l_add"}
		{bone hide	"glass_b_m_r_add"}
		{bone hide	"glass_f_s_l_add"}
		{bone hide	"glass_f_s_r_add"}
		{bone hide	"front_left_leds"}
		{bone hide	"front_right_leds"}
		{bone hide	"back_left_leds"}
		{bone hide	"back_right_leds"}
		{bone hide	"back_light_dxo"}
		{bone hide	"back_left_leds_add"}
		{bone hide	"back_right_leds_add"}

		{bone hide	"front_light_l2_dxo_add"}
		{bone hide	"front_light_r2_dxo_add"}
		{bone hide	"front_light_m_add"}

		{bone hide	"glass_lamp_r_add"}
		{bone hide	"glass_lamp_r2_add"}
		{bone hide	"glass_lamp_l_add"}
		{bone hide	"glass_lamp_l2_add"}

		{bone hide	"front_light_r_s_add"}
		{bone hide	"front_light_l_s_add"}

;главные чистые фары
		{bone hide	"front_light_m_r_add"}
		{bone hide	"front_light_m_l_add"}

		{bone hide	"front_light_m_r2_add"}
		{bone hide	"front_light_m_l2_add"}


		{bone hide	"front_light_r_2_add"}
		{bone hide	"front_light_l_2_add"}
		{bone hide	"front_light_r_1_add"}
		{bone hide	"front_light_l_1_add"}
		{view hide "alarm_f"}
		{view hide "stop_signal"}
		{view hide "light"}
		{view hide "highlight"}
		{view hide	"lightsource"}
		{bone hide	"ready_shoot"}
		{bone hide	"reload_shoot"}

		{view hide	"light_main"}
		{view stop	"light_main"}
		{view hide	"light_back"}
		{view stop	"light_back"}
		{view hide	"light_second"}
		{view stop	"light_second"}
		{view hide	"light_main_stop"}
		{view stop	"light_main_stop"}
		{view hide	"light_back_stop"}
		{view stop	"light_back_stop"}
		{view hide	"light_second_stop"}
		{view stop	"light_second_stop"}
		{bone hide "visor_round_mesh_damage"}					
		{bone hide "visor_driver_mesh_damage"}					
		{bone hide "visor_commander_mesh_damage"}					
		{bone hide "visor_gunner_mesh_damage"}					

		{bone hide "visor_round_mesh_destroy"}					
		{bone hide "visor_driver_mesh_destroy"}					
		{bone hide "visor_commander_mesh_destroy"}					
		{bone hide "visor_gunner_mesh_destroy"}					

		{bone hide	"system_warning"}
		{bone hide	"system_fuel_low"}
		{bone hide	"system_fuel_empty"}
		{bone hide	"system_akb"}
		{bone hide	"system_check"}
		{bone hide	"system_light"}
		{bone hide	"system_heat"}
		{bone hide	"system_hook_open"}
		{bone hide	"system_warmlight"}
		{add_view 	"fx_lamp_red"							"light_main"			"headlightL_back_f_red"}
		{add_view 	"fx_lamp_red"							"light_main"			"headlightR_back_f_red"}
		{add_view 	"headlight_car_led"						"light_second"			"HeadlightL_s"}
		{add_view 	"headlight_car_led"						"light_second"			"HeadlightL_s"}
		{add_view 	"headlight_car_led2"					"light_back"			"headlightL_back_f"}
		{add_view 	"headlight_car_led2"					"light_back"			"headlightR_back_f"}
		{add_view 	"headlight_car_led_long"				"light_main"			"headlightR_m"}
		{add_view 	"headlight_car_led_long"				"light_main"			"headlightL_m"}
		{add_view 	"headlight_car_led_long"				"light_main"			"headlightR"}
		{add_view 	"headlight_car_led_long"				"light_main"			"headlightL"}


		{add_view 	"headlight_car_interior"				"small_light_doors"			"small_light_doors"}
		{add_view 	"headlight_car_interior"				"small_light"			"small_light"}
		{add_view 	"headlight_car_interior"				"small_light"			"hatch_light1"}
		{add_view 	"headlight_car_interior"				"small_light"			"hatch_light2"}
		{add_view 	"headlight_car_interior"				"small_light"			"hatch_light3"}





		{add_view 	"headlight_car_led2"									"light_main"			"headlightR"}
		{add_view 	"headlight_car_led2"									"light_main"			"headlightL"}
		{add_view 	"fx_lamp_red_led_stop_nolight"							"light_main"			"headlightL_back_f_red_nolight"}	; Задние ламопчки
		{add_view 	"fx_lamp_red_led_stop_nolight"							"light_main"			"headlightR_back_f_red_nolight"}	;Задние ламопчки

		{add_view	"alarm_signal"			"alarm_f"			"warm_glass_l_ems"}
		{add_view	"alarm_signal"			"alarm_f"			"warm_glass_r_ems"}	
		{add_view	"alarm_signal"			"alarm_f"			"warm_light_r"}
		{add_view	"alarm_signal"			"alarm_f"			"warm_light_l"}	

		{add_view 	"light_vehicle"			"light"				"fxlight"}
		{add_view	"alarm_signal"			"alarm_f"			"FXstop1"}
		{add_view	"alarm_signal"			"alarm_f"			"FXstop2"}	
		{add_view 	"alarm_signal"			"alarm_f"			"FXlight1"}
		{add_view 	"alarm_signal"			"alarm_f"			"FXlight2"}
		{add_view 	"alarm_signal"			"alarm_f"			"headlightL"}
		{add_view 	"alarm_signal"			"alarm_f"			"headlightR"}

		;// Light Bulb FX
		{add_view 	"headlight"			"lights"		"headlightl"}
		{add_view 	"headlight"			"lights"		"headlightr"}
		{add_view 	"headlight"			"lights"		"headlightc"}
		{add_view 	"headlight"			"lights"		"headlightl1"}
		{add_view 	"headlight"			"lights"		"headlightr1"}
		{add_view 	"headlight2"		"lights"		"armorlightl"}
		{add_view 	"headlight2"		"lights"		"armorlightr"}
		{add_view 	"headlight_dim"		"lights"		"dimlight"}
		{add_view 	"headlight_dim"		"lights"		"dimlightl"}
		{add_view 	"headlight_dim"		"lights"		"dimlightr"}

		;// Light
		{add_view 	"light_vehicle"		"lights"		"headlightl"}
		{add_view 	"light_vehicle"		"lights"		"headlightr"}
		{add_view 	"light_vehicle"		"lights"		"headlightc"}
		{add_view 	"light_vehicle_dim"	"lights"		"armorlightl"}
		{add_view 	"light_vehicle_dim"	"lights"		"armorlightr"}
		{add_view 	"light_vehicle_dim"	"lights"		"dimlight"}
		{add_view 	"light_vehicle_dim"	"lights"		"dimlightl"}
		{add_view 	"light_vehicle_dim"	"lights"		"dimlightr"}

		;// Mission helpers
		{add_view	"ammo" 				"ammo" "body"}
		{link_sound 	"start_small" 			"fire/start_small/emt_fire_med_fuel_01"}
		{link_sound 	"flame_small"			"fire/small_stuff/fire_small"}


		{view hide "stop_signal"}
		{view hide "lights"}
		{view hide "highlight"}

		{call "init_gun"}
		{call "add_movement_sound"}
		{call "add_weapon_sound"}
		{call "update_moveable"}
		{call "update_lights"}
		{call "engine_check"}
		{set "burn_fire" 0}

		{link_sound "hatch_heavy" "vehicle/doors/hatches/heavy"}
		{link_sound "hatch_medium" "vehicle/doors/hatches/medium"}
		{link_sound "hatch_light" "vehicle/doors/hatches/light"}
		{link_sound "hatch_visor" "vehicle/doors/hatches/visor"}
		{ik_enable "turret_ik_damage" 0}
		{ik_enable "gun_ik_damage" 0}
		{ik_enable "visor_link_slow" 0}
		{ik_enable "bone_gun_v_mg_slow" 0}
		(define "glass_damaged" ;
			{volumes "%component_damage" disable bullet contact blast touch}
		)
		("glass_damaged" component(front_glass) )
		("glass_damaged" component(glass_doorb) )
		("glass_damaged" component(glass_doorl) )
		("glass_damaged" component(glass_doorl1) )
		("glass_damaged" component(glass_doorl2) )
		("glass_damaged" component(glass_doorl3)   )
		("glass_damaged" component(glass_doorr)   )
		("glass_damaged" component(glass_doorr1)   )
		("glass_damaged" component(glass_doorr2)   )
		("glass_damaged" component(glass_doorr3)   )
		("glass_damaged" component(glass_l_1)   )
		("glass_damaged" component(glass_l_2)   )
		("glass_damaged" component(glass_l_3)   )
		("glass_damaged" component(glass_r_1)   )
		("glass_damaged" component(glass_r_2)   )
		("glass_damaged" component(glass_r_3)   )
		("glass_damaged" component(glass_wind_b_r)    )
		("glass_damaged" component(glass_wind_b_l)  	    )
		("glass_damaged" component(glass_wind_up_r)     )
		("glass_damaged" component(glass_wind_up_l)  	   )
		("glass_damaged" component(glass_wind_f_l)  	    )
		("glass_damaged" component(glass_wind_f_r)      )
		{delay 10
			{call "idle"}
		}
	}
	{on "open_hatch"
		{if tagged "open" 
			{ani_play "doorb" -0.6}
			{start_sound "push/container/close/"}
			{tags remove "open"}
			{delay 2
				{start_sound "push/footlocker/close/"}
			}
		else 
			{tags add "open"}
			{ani_play "doorb" 0.5}
			{start_sound "push/doors/open/"}
			{delay 2
				{start_sound "push/footlocker/open/"}
			}
		}
	}
	
	(define "distant_opened"
		{on "%0_open"
			{if not tagged "auto_opened_%0"
				{tags add "auto_opened_%0"}
				{ani_play "%1" 0.5} 
			else
				{tags remove "auto_opened_%0"}
				{ani_play "%1" -0.5} 
			}
		}
	)	
	("distant_opened" args doorl doorleft_open )
	("distant_opened" args doorl1 doorleft1_open )
	("distant_opened" args doorr doorright_open )
	("distant_opened" args doorr1 doorright1_open )
	("distant_opened" args doorb doorb_open )
	("distant_opened" args hood hood_open )
	{on "hook_open"
		{if not tagged "hook_open" 
			{if tagged "open_fire" 
				;{spawn "ex_propane" "engine"}
				{view start "burn_fire3_open"}				
				{start_sound "fire/detonation/"}
				{delay 15
					{view pause "burn_fire3_open"}
				}
			}
			{tags add "hook_open"}
			{ani_play "hook_open" 1}
			{delay 0.1
				{if tagged "stage1"
					{view pause "burn_fire1_close_small"}
				}
				{if tagged "stage2" 
					{view start "burn_fire2_open"}
				}		
				{if tagged "stage3" 
					{view start "burn_fire3_open"}
					{view pause "burn_fire3_close"}
				}
				{if tagged "stage4" 
					{view pause "burn_fire3_close"}
					{burn volume "engine" fx "smoke_aero_small" time 5 fake even_law}
				}
				{if tagged "stage5" 
					{view pause "burn_fire3_close"}
					{view pause "burn_fire4_close"}
					{burn volume "engine" fx "smoke_aero_small" time 5 fake even_law}
				}
				{if tagged "stage6" 
					{view pause "burn_fire3_close"}
					{view pause "burn_fire4_close"}
					{view pause "burn_fire5_close"}
					{burn volume "engine" fx "smoke_aero_small" time 5 fake even_law}
				}
				{if tagged "stage7" 
					{view pause "burn_fire3_close"}
					{view pause "burn_fire5_close"}
					{burn volume "engine" fx "smoke_aero_small" time 5 fake even_law}
				}
				{if tagged "stage8" 
					{view pause "burn_fire3_close"}
					{view pause "burn_fire5_close"}
					{burn volume "engine" fx "smoke_aero_small" time 5 fake even_law}
				}
				{if tagged "stage9" 
					{view pause "burn_fire3_close"}
					{view pause "burn_fire1_close_small"}
					{burn volume "engine" fx "smoke_bats" time 2 fake even_law}
				}
				{if tagged "burn_fire1_close_small" 
					{view pause "burn_fire1_close_small"}
					{view start "burn_fire1_open_small"}
				}
				{bone show	"system_hook_open"}
				{start_sound "push/metallocker/open/"}
				{volumes "hook_open" disable touch}
				{delay 4
					{volumes "hook_open" enable touch}
				}
			}
		else tagged "hook_open" 
			{if tagged "open_fire" 
				{volumes "hook_open" disable touch}
				{view pause "burn_fire3_open"}
			}
			{delay 0.5
				{if tagged "stage1" 
					{view start "burn_fire1_close_small"}
				}
				{if tagged "stage2" 
					{view pause "burn_fire2_open"}
				}		
				{if tagged "stage3" 
					{view pause "burn_fire3_open"}
					{view start "burn_fire3_close"}
				}
				{if tagged "stage4" 
					{view start "burn_fire3_close"}
				}
				{if tagged "stage5" 
					{view start "burn_fire4_close"}
				}
				{if tagged "stage6" 
					{view start "burn_fire5_close"}
				}
				{if tagged "stage7" 
					{view start "burn_fire5_close"}
				}
				{if tagged "stage8" 
					{view start "burn_fire5_close"}
				}
				{if tagged "stage9" 
					{view start "burn_fire1_close_small"}
				}
				{if tagged "burn_fire1_close_small" 
					{view start "burn_fire1_close_small"}
					{view pause "burn_fire1_open_small"}
				}
			}
			{start_sound "push/metallocker/close/"}
			{tags add "close"}
			{ani_play "hook_open" -1.3}
			{delay 0.1
				{bone hide	"system_hook_open"}
				{volumes "hook_open" disable touch}
				{delay 3
					{volumes "hook_open" enable touch}
				}
			}
			;{volumes "hook_open" disable touch}
			{tags remove "hook_open"}
		}
	}

	;/*=========== Hardcode Events Begin  ===========*/

	{on turn on 				;// applies to track chassis neutral turn
		{play_sound "turn" }
		{play_sound "turn_loop" 1}
		{tags add "turn"}
		{if velocity 30
			{play_sound "engine99_load" }
		else velocity 20
			{play_sound "engine66_load" }
		else velocity 10
			{play_sound "engine33_load" }
		else velocity 0
			{play_sound "engine00_load" }
		}	
		{call "gun_update"}
		{call "stop_on"}
		{call "exhaust_on"}
		{play_sound "move" 1}
		{stop_sound "engine_idle"}
	}

	{on turn off 				;// applies to track chassis neutral turn
		{if velocity 15
			{delay 1.5
				{play_sound "turn_loop_end" }
				{stop_sound "turn_loop"}	
			}
		else velocity 10
			{delay 1
				{play_sound "turn_loop_end" }
				{stop_sound "turn_loop"}	
			}
		else velocity 5
			{delay 0.5
				{play_sound "turn_loop_end" }
				{stop_sound "turn_loop"}	
			}
		else 
			{stop_sound "move00"}
			{delay 0.1
				{play_sound "turn_loop_end" }
				{stop_sound "turn_loop"}	
			}
		}	
		{tags remove "turn"}
		{call "exhaust_off"}
		{stop_sound "move"}
	}

	{on move on 				;// any vehicle moves forward or reverse
		{if tagged "overload"
			{play_sound "move_broken_suspension" 1}
		}
		{if tagged "hot"
			{play_sound "heater" 1}			
		}
		{ani_play "bucket" -2 resume callback}
		{tags remove "bucket"}		
		(define "wheel_damage" ;
			{if work "%component" 
			else
				;{play_sound "" }	
				{add_view "fx_trace_damage" "%component_fx_trace" "%component_fx_trace"}
				{view start "%component_fx_trace"}
				
			}
		)
		("wheel_damage" component(wheelr1)     )
		("wheel_damage" component(wheelr2)     )
		("wheel_damage" component(wheelr3)     )
		("wheel_damage" component(wheelr4)     )
		("wheel_damage" component(wheelr5)     )
		("wheel_damage" component(wheelr6)     )
		("wheel_damage" component(wheelr7)     )
		("wheel_damage" component(wheelr8)     )
		("wheel_damage" component(wheelr9)     )
		("wheel_damage" component(wheelr10)     )
		("wheel_damage" component(wheelr11)     )
		("wheel_damage" component(wheelr12)     )
		("wheel_damage" component(wheelr13)     )
		("wheel_damage" component(wheell1)     )
		("wheel_damage" component(wheell2)     )
		("wheel_damage" component(wheell3)     )
		("wheel_damage" component(wheell4)     )
		("wheel_damage" component(wheell5)     )
		("wheel_damage" component(wheell6)     )
		("wheel_damage" component(wheell7)     )
		("wheel_damage" component(wheell8)     )
		("wheel_damage" component(wheell9)     )
		("wheel_damage" component(wheell10)     )
		("wheel_damage" component(wheell11)     )
		("wheel_damage" component(wheell12)     )
		("wheel_damage" component(wheell13)     )
		{if tagged "hook_open" 
			{ani_play "opened_move" 1}
		}
		{if tagged "int" 
			{play_sound "move_int" 1}	
		else
			{play_sound "move_ext" 1}	
		}
		{if broken "disk" 2
			{play_sound "move_broken2" 1}
		else broken "disk" 1
			{play_sound "move_broken" 1}
		else broken "wheel_heavy" 4
			{play_sound "move_broken2" 1}
		else broken "wheel_heavy" 2
			{play_sound "move_broken" 1}
		}
		{if broken "transmission" 
			{if rand 0.3
				{components "transmission" destroy}
			}
		}
		{stop_sound "engine_idle"}
		{stop_sound "move_end"}
		{play_sound "move" 1}
		{call "exhaust_on"}
		{if not "animated"						;// Prevents animation from playing when "stop" animation is currently playing
			;{ani_stop "stop"}
			{ani_play "start" 1.0 callback}
			{ani_stop "stop"}
			{delay 1
				{ani_play "move" loop}
			}
			{set "animated" 1}
		}
		{view pause "exhaust2"}
		{if tagged "vehicle_detect_motion"		;// used for mission scripts
			{tags add "vehicle_in_motion"}		;// used for mission scripts
		}
	}

	{on move off 				;// any vehicle not moving forward or reverse
		{stop_sound "move_broken_suspension" }
		{stop_sound "heater"}
		{tags remove "slow"}
		{tags remove "normal"}
		{tags remove "fast"}
		{tags remove "back"}
		{stop_sound "move_broken" }
		{stop_sound "move_broken2" }
		(define "wheel_damage" ;
			{if work "%component" 
			else
				;{stop_sound "" }	
				{view pause "%component_fx_trace"}
				
			}
		)
		("wheel_damage" component(wheelr1)     )
		("wheel_damage" component(wheelr2)     )
		("wheel_damage" component(wheelr3)     )
		("wheel_damage" component(wheelr4)     )
		("wheel_damage" component(wheelr5)     )
		("wheel_damage" component(wheelr6)     )
		("wheel_damage" component(wheelr7)     )
		("wheel_damage" component(wheelr8)     )
		("wheel_damage" component(wheelr9)     )
		("wheel_damage" component(wheelr10)     )
		("wheel_damage" component(wheelr11)     )
		("wheel_damage" component(wheelr12)     )
		("wheel_damage" component(wheelr13)     )
		("wheel_damage" component(wheell1)     )
		("wheel_damage" component(wheell2)     )
		("wheel_damage" component(wheell3)     )
		("wheel_damage" component(wheell4)     )
		("wheel_damage" component(wheell5)     )
		("wheel_damage" component(wheell6)     )
		("wheel_damage" component(wheell7)     )
		("wheel_damage" component(wheell8)     )
		("wheel_damage" component(wheell9)     )
		("wheel_damage" component(wheell10)     )
		("wheel_damage" component(wheell11)     )
		("wheel_damage" component(wheell12)     )
		("wheel_damage" component(wheell13)     )
		{kill_delay "accelerate"}
		{stop_sound "engine00_load" }
		{stop_sound "engine33_load" }
		{stop_sound "engine66_load" }
		{stop_sound "engine99_load" }
		{call "gun_update"}
		{tags remove "move"}	
		{stop_sound "move00"}
		{stop_sound "move10"}
		{stop_sound "move20"}
		{stop_sound "move30"}
		{ani_stop "move"}
		{stop_sound "move"}
		{play_sound "move_end"}
		{stop_sound "move"}
		{tags remove "brake_on"}
		{call "exhaust_off"}
		{tags remove "vehicle_in_motion"}		;// used for mission scripts
	}

	{on accelerate on			;// any vehicle that is accelerating
		{if tagged "hot"
			{if rand 0.1
				{spawn "car_destroy_engine" "engine"}
				{call "_burn"}
			}
			{if rand 0.3
				{play_sound "heat" 1}
				{burn volume "radiator" 	fx "smoke_heat_barrel" time 15 fake even_law}		
				{burn volume "engine_car" 	fx "smoke_heat_barrel" time 15 fake even_law}		
				{burn volume "engine" 		fx "smoke_heat_barrel" time 15 fake even_law}		
				{delay 7
					{stop_sound "heat" }							
				}			
			}
		}
		{kill_delay "accelerate"}
		{tags add "accelerate_on"}
		{if velocity 30
			{view start "accelerate99"}
			{tags add "99_load"}
			{play_sound "engine99_accelerate" }
			{delay 1 "accelerate"
				{play_sound "engine99_load" 1}
			}
		else velocity 20
			{view start "accelerate66"}
			{tags add "66_load"}
			{play_sound "engine66_accelerate" }
			{delay 1.5 "accelerate"
				{play_sound "engine66_load" 1}
			}
		else velocity 10
			{view start "accelerate33"}
			{tags add "33_load"}
			{play_sound "engine33_accelerate" }
			{delay 1.5 "accelerate"
				{play_sound "engine33_load" 1}
			}
		else velocity 0
			{view start "accelerate00"}
			{tags add "00_load"}
			{play_sound "engine00_accelerate" }
			{delay 1 "accelerate"
				{play_sound "engine00_load" 1}
			}
		}	
		{call "exhaust_on"}
	}

	{on accelerate off			;// any vehicle that is decelerating, or maintaining current speed
		{tags remove "accelerate_on"}
		{delay 0.5
			{kill_delay "accelerate"}
			{view pause "accelerate00"}
			{view pause "accelerate33"}
			{view pause "accelerate66"}
			{view pause "accelerate99"}
			{stop_sound "engine00_load" }
			{stop_sound "engine33_load" }
			{stop_sound "engine66_load" }
			{stop_sound "engine99_load" }
			{play_sound "accelerate_off"  }
			{tags remove "99_load"}
			{tags remove "66_load"}
			{tags remove "33_load"}
			{tags remove "00_load"}
		}
		{call "exhaust_off"}
	}

	{on brake on				;// any vehicle applying brakes to slow down
		{if velocity 20
			{play_sound "brake"  }
		else
			{play_sound "brake_small"  }
		}
		{call "stop_on"}
		{delay 0.5
			{kill_delay "accelerate"}
			{view pause "accelerate00"}
			{view pause "accelerate33"}
			{view pause "accelerate66"}
			{view pause "accelerate99"}
			{stop_sound "engine00_load" }
			{stop_sound "engine33_load" }
			{stop_sound "engine66_load" }
			{stop_sound "engine99_load" }
			{play_sound "accelerate_off"  }
			{tags remove "99_load"}
			{tags remove "66_load"}
			{tags remove "33_load"}
			{tags remove "00_load"}
		}
		{call "stop_on"}
		{play_sound "brake"}
		{view show "stop_signal"}
		{view start "stop_signal"}
	}

	{on brake off				;// any vehicle releases brakes
		{stop_sound "brake"}
		{delay 0.5
			{view hide "stop_signal"}
		}
	}
	{on "start_engine"
		{if work "engine"
			{if not "engine_started"
				{tags add "manual_start"}
				{set "engine_started" 1}
				{spawn "fx_engine_obstacles" "fxsmoke" x}
				{spawn "fx_engine_obstacles" "fxsmoke1" x}
				{view start "exhaust"}
				{delay 0.5
					{spawn "fx_engine_obstacles" "fxsmoke" x}
					{spawn "fx_engine_obstacles" "fxsmoke1" x}
					{view start "exhaust"}
					{delay 0.5
						{view pause "exhaust"}
						{delay 0.5
							{spawn "fx_engine_obstacles" "fxsmoke" x}
							{spawn "fx_engine_obstacles" "fxsmoke1" x}
							{view start "exhaust"}
							{delay 0.5
								{view pause "exhaust"}
								{delay 0.5
									{spawn "fx_engine_obstacles" "fxsmoke" x}
									{spawn "fx_engine_obstacles" "fxsmoke1" x}
									{view start "exhaust"}
									{delay 0.5
										{view pause "exhaust"}
									}
								}
							}
						}
					}
				}
				{play_sound "start" }
				{delay 4 "engine_starts"
					{call "update_engine"}
					{view start "engine_idle"}
					{set "engine_started" 1}
					{kill_delay "engine_stopped"}
					{kill_delay "engine_steam_stopped"}
					{stop_sound "engine_end"}
					{play_sound "engine" 1}
					{delay 0.5
						{call "start_heater"}
						{play_sound "engine_idle" 1}
					}
					{chassis_work 1}
				}
			else
				{view start "engine_stop"}
				{tags remove "00_engine"}
				{tags remove "33_engine"}
				{tags remove "66_engine"}
				{tags remove "99_engine"}
				{ani_stop "work"}
				{ani_stop "move"}
				{delay 2 "engine_stopped"
					{call "cooling_off"}
					{view pause "engine_stop"}
					{set "engine_started" 0}
					{view pause "engine_idle"}
					{stop_sound "engine"}
					{stop_sound "engine_idle"}
					{play_sound "engine_end"}
				}
				{delay 12 "engine_steam_stopped"
					{view pause "engine_steam"}
				}
			}
		}
	}

	{on engine on				;// any vehicle moves forward, reverse or preforming neutral turn
		{view start "exhaust_start"}
		{view start "engine_idle"}
		{set "engine_started" 1}
		{call "update_engine"}
		{stop_sound "engine_end"}
		{play_sound "engine" 1}
		{play_sound "start_engine" }
		{view start "engine_steam"}
		{delay 0.5
			{view pause "exhaust_start"}
			{view start "exhaust_idle"}
			{call "start_heater"}
			{play_sound "engine_idle" 1}
		}
		{if "hidden"
			{call "engine_on"}					;// added call to fix vehicles spawned through mission scripts not having sounds in Coop mode
		}
		{if "engine_on"							;// checks that engine is on and not toggled off while moving
			{kill_delay "engine_stopped"}
			{kill_delay "engine_steam_stopped"}
			{stop_sound "engine_stop"}
			{play_sound "exhaust"}				;// exhaust/accelerate sound
			{play_sound "engine_full" 1}
			{view start "engine_steam"}			;// used for train steam fx, and vehicle engines in rain
			{if "hidden"
				{call "engine_idle"}
				{call "play_trace_engine"}		;// plays dust fx for aero vehicles
				{call "update_lights"}
				{set "hidden" 0}
			}
		}
	}

	{on engine off				;// any vehicle not moving at all
		{if not tagged "manual_start"
			{view start "engine_stop"}
			{tags remove "00_engine"}
			{tags remove "33_engine"}
			{tags remove "66_engine"}
			{tags remove "99_engine"}
			{ani_stop "work"}
			{ani_stop "move"}
			{delay 2 "engine_stopped"
				{call "cooling_off"}
				{view pause "engine_stop"}
				{set "engine_started" 0}
				{view pause "engine_idle"}
				{stop_sound "engine"}
				{stop_sound "engine_idle"}
				{play_sound "engine_end"}
				{view pause "exhaust_idle"}
			}
			{delay 12 "engine_steam_stopped"
				{view pause "engine_steam"}
			}
		}
		{if not "engine_on"
			{stop_sound "engine_full"}
			{play_sound "brake"}
			{view pause "exhaust"}
			{view pause "exhaust2"}
		}
		{if "engine_on"
			{play_sound "exhaust"}
			{delay 0.5 "engine_stopped"
				{if work "engine"
					{if work "body"
						{if "engine_on"
							{play_sound "engine_idle" 1}
							{stop_sound "engine_full"}
						}
					}
				}
			}
			{delay 0.5 "engine_steam_stopped"
				{if work "engine"
					{if work "body"
						{if "engine_on"
							{if work "mover"
								{view start "exhaust2"}
							}
						}
					}
				}
			}
		}
	}
	{on "update_engine"
		{if "engine_started"
			{tags add "update_engine"}
			{if velocity 30
				{stop_sound "engine66"}
				{stop_sound "engine33"}
				{stop_sound "engine00"}
				{stop_sound "move0"}
				{stop_sound "move33"}
				{stop_sound "move66"}
				{tags remove "00"}
				{tags remove "01"}
				{tags remove "33"}
				{tags remove "66"}
				{view pause "move33"}
				{view pause "move66"}
				{view pause "move00"}
				{if not tagged "99"
					{view start "gear_switch"}
					{view start "move99"}
					{play_sound "gear03"  }
					{play_sound "move99" 1 }
					{play_sound "engine99" 1}
					{tags add "99"}
				}
				{delay 0.5
					{view pause "gear_switch"}
				}
			else velocity 20
				{stop_sound "engine99"}
				{stop_sound "engine33"}
				{stop_sound "engine00"}
				{stop_sound "move0"}
				{stop_sound "move33"}
				{stop_sound "move99"}
				{view pause "move33"}
				{view pause "move00"}
				{view pause "move99"}
				{tags remove "00"}
				{tags remove "01"}
				{tags remove "33"}
				{tags remove "99"}
				{if not tagged "66"
					{view start "gear_switch"}
					{view start "move66"}
					{play_sound "gear02"  }
					{play_sound "move66" 1 }
					{play_sound "engine66" 1}
					{tags add "66"}
				}
				{delay 0.5
					{view pause "gear_switch"}
				}
			else velocity 10
				{stop_sound "engine99"}
				{stop_sound "engine66"}
				{stop_sound "engine00"}
				{stop_sound "move0"}
				{stop_sound "move66"}
				{stop_sound "move99"}
				{tags remove "01"}
				{tags remove "00"}
				{tags remove "66"}
				{tags remove "99"}
				{view pause "move00"}
				{view pause "move66"}
				{view pause "move99"}
				{if not tagged "33"
					{view start "gear_switch"}
					{view start "move33"}
					{play_sound "gear01"  }
					{play_sound "move33" 1 }
					{play_sound "engine33" 1}
					{tags add "33"}
				}
				{delay 0.5
					{view pause "gear_switch"}
				}
			else velocity 1
				{stop_sound "engine99"}
				{stop_sound "engine66"}
				{stop_sound "engine33"}

				{stop_sound "move33"}
				{stop_sound "move66"}
				{stop_sound "move99"}

				{view pause "move33"}
				{view pause "move66"}
				{view pause "move99"}

				{tags remove "33"}
				{tags remove "66"}
				{tags remove "99"}
				{if not tagged "01"
					{view start "gear_switch"}
					{view start "move00"}
					{play_sound "gear00"  }
					{play_sound "move00" 1 }
					{play_sound "engine00" 1 }
					{tags add "01"}
				}	
				{delay 0.5
					{view pause "gear_switch"}
				}
			else velocity 0
				{stop_sound "engine99"}
				{stop_sound "engine66"}
				{stop_sound "engine33"}

				{stop_sound "move00"}
				{stop_sound "move33"}
				{stop_sound "move66"}
				{stop_sound "move99"}

				{view pause "move33"}
				{view pause "move66"}
				{view pause "move99"}

				{tags remove "01"}
				{tags remove "33"}
				{tags remove "66"}
				{tags remove "99"}
				{if not tagged "00"
					{view start "gear_switch"}
					{view start "move00"}
					{play_sound "gear00"  }
					{play_sound "engine00" 1 }
					{tags add "00"}
				}	
				{delay 0.5
					{view pause "gear_switch"}
				}
			}	
			{if "engine_started"
				{spawn "fx_engine_obstacles" "fxsmoke" x}
				{spawn "fx_engine_obstacles" "fxsmoke1" x}
			}
			{delay_effect 0.2 
				"update_engine"
			}
		else 
			{tags remove "update_engine"}
			{stop_sound "engine99"}
			{stop_sound "engine66"}
			{stop_sound "engine33"}
			{stop_sound "engine00"}
			{stop_sound "move00"}
			{stop_sound "move33"}
			{stop_sound "move66"}
			{stop_sound "move99"}
			{view pause "move00"}
			{view pause "move33"}
			{view pause "move66"}
			{view pause "move99"}
			{tags remove "00"}
			{tags remove "33"}
			{tags remove "66"}
			{tags remove "99"}			
			
		}
	}	

	{on operatable on
		{call "repaired_engine_check"} 		;// calls check to restart engine after body repair and crew re-enters vehicle
		{call "check_water_level"}
	}

	{on operatable off
		{unlink_trailer}
		{tags add "_abandoned"}			;// check for "leave_unit" / self destruction
		{delay 12 
			{tags remove "_abandoned"}
		}
	}
	{on "open_light"
		{if not tagged "light_on_b" 
			{bone show	"system_light"}
			{tags add "light_on"}
			{if not tagged "light_on_m"
				{tags add "light_on_m"}
				{delay 0.5
					{bone show	"police_light"}
					{call "fx_ligher"}
					{start_sound "vehicle/light/"}
					{view start	"light_main"}
					{view show	"light_main"}
					{bone show	"front_left_leds"}
					{bone show	"front_right_leds"}
					{bone show	"back_left_leds"}
					{bone show	"back_right_leds"}
				}
			else not tagged "light_on_s"
				{tags add "light_on_s"}
				{delay 0.5
					{start_sound "vehicle/light/"}
					{bone show	"glass_f_s_r_add"}
					{bone show	"glass_f_s_l_add"}
					{view start	"light_second"}
					{view show	"light_second"}
				}
			else not tagged "light_on_b"
				{tags add "light_on_b"}
				{delay 0.5
					{bone show	"glass_f_m_l_add"}
					{bone show	"glass_f_m_r_add"}
					{bone show	"glass_b_m_l_add"}
					{bone show	"glass_b_m_r_add"}
					{start_sound "vehicle/light/"}
					{view start	"light_back"}
					{view show	"light_back"}
				}
			}
		else 
			{bone hide	"system_light"}
			{call "stop_all"}
			{tags remove "light_on"}
			{tags remove "light_on_b"}
			{view stop	"light_back"}
			{view hide	"light_back"}
			{view start	"light_back_stop"}
			{view show	"light_back_stop"}
			{delay 2
				{view stop	"light_back_stop"}
				{view hide	"light_back_stop"}
			}			
			{bone hide	"glass_f_m_l_add"}
			{bone hide	"glass_f_m_r_add"}
			{bone hide	"glass_b_m_l_add"}
			{bone hide	"glass_b_m_r_add"}
			{bone hide	"front_left_leds"}
			{bone hide	"front_right_leds"}
			{bone hide	"back_left_leds"}
			{bone hide	"back_right_leds"}
			{delay 0.5
				{tags remove "light_on_s"}
				{start_sound "vehicle/light/"}
				{bone hide	"glass_f_s_r_add"}
				{bone hide	"glass_f_s_l_add"}
				{view stop	"light_second"}
				{view hide	"light_second"}
				{view start	"light_second_stop"}
				{view show	"light_second_stop"}
				{delay 1
					{view stop	"light_second_stop"}
					{view hide	"light_second_stop"}
				}			
				{delay 0.5
					{tags remove "light_on_m"}
					{start_sound "vehicle/light/"}
					{view stop	"light_main"}
					{view hide	"light_main"}
					{tags add "light_off"}
					{view start	"light_main_stop"}
					{view show	"light_main_stop"}
					{delay 1
						{view stop	"light_main_stop"}
						{view hide	"light_main_stop"}
					}			
				}
			}
		}
	}
	{on "open_light_sunlight"
		{if tagged "light_update" 
			{bone show	"system_light"}
			{tags add "light_on"}
			{tags add "light_on_m"}
			{view start	"light_main"}
			{view show	"light_main"}
			{tags add "light_on_s"}
			{bone show	"glass_f_s_r_add"}
			{bone show	"glass_f_s_l_add"}
			{view start	"light_second"}
			{view show	"light_second"}
			{tags add "light_on_b"}
			{bone show	"glass_f_m_l_add"}
			{bone show	"glass_f_m_r_add"}
			{bone show	"glass_b_m_l_add"}
			{bone show	"glass_b_m_r_add"}
			{bone show	"front_left_leds"}
			{bone show	"front_right_leds"}
			{bone show	"back_left_leds"}
			{bone show	"back_right_leds"}
			{start_sound "vehicle/light/"}
			{view start	"light_back"}
			{view show	"light_back"}
		}
	}

	{on break
		{if not tagged "exploded"
			{if component "body"
				{view stop "ammo"}
				{call "stat_break"}
				{call "emit_crew"}
				{call "disable_all_seats"}
				{call "engine stop view"}
				{call "deactivate_vehicle"}
			}
			{if component "engine"
				{call "engine stop view"}
				{talk "broken_engine"}
			}
			{if component "glass"
				{call "break_glass"}
			}
			{if not component multiple 		;// if the changed component is the "last" one. If only a single component changes or if it is the last component of multiple ones (like with {components destroy}, this will yield "true".
				{call "update_moveable"}
				{call "break_light"}
			}
		}
	}

	{on repair
		{call "update_moveable"}
		{call "repaired_engine_check"}
		{if component "body"
			{call "activate_vehicle"}
			{call "enable_all_seats"}
		}
	}

	{on contact
		{if volume "sticky"
			{if effector "grenade"
				{if not effector "contact"
					{call "grenade_stick"}
				}
			}
		}
		{if not impregnable
			{if effector_velocity 50
				{if effector "airborne"
					{component break}
				}
			else effector_velocity 3
				{if effector "piece_big_stone"
					{component break}
				}
			}
		}
		{if effector "grenade fire"		;// molotov grenades
			{burn fx "smoke_molot_vehicle" time 20 fake}
			{start_sound "detonation/small/molotov_break"}
			{talk "burning"}
		}
		{if effector "burn_piece"		;// ic shell
			{burn fx "smoke_molot_vehicle" time 20 fake}
			{start_sound "detonation/small/molotov_break"}
			{talk "burning"}
		}
	}

	{on blast_wreaked sync
		{vehicle_health_damage_blast}
	}

	{on destroy
		{if component "visor"
			{bone cut "visor_telescope"}					
			{spawn "glass_hit2" volume x}
			{damage_report "visor_telescope" "component/visor_broken"}
			{tear "piece_small_glass" bone from_volume
				{impulse up 0.5 0.2 dir 1.5 cx 2 1 cy 2 1 rnd_dir 2 no_position}
			}
		else component "visor_round"
			{tags add "visor_round_blocked"}
			{weapon_work "mgun2" 0}
			{damage_report "visor_commander" "component/visor_commander_broken"}
			{spawn "glass_hit2" volume x}
			{bone hide "visor_round_mesh_damage"}					
			{bone show "visor_round_mesh_destroy"}					
			{bone cut "visor_round_commander"}						
		else component "visor_commander"
			{damage_report "visor_commander" "component/visor_commander_broken"}
			{spawn "glass_hit2" volume x}
			{if crew_in_place "commander"
				{if rand 0.5
					{with_linked_entity "commander"
						{health_damage_count 35
							{effects "" "hit" "hit" "die" "die"}
						}
					}
				}
			}
			{bone hide "visor_driver_mesh_damage"}					
			{bone show "visor_driver_mesh_destroy"}					
			{bone cut "visor_commander"}					
		else component "visor_driver"
			{damage_report "visor_driver" "component/visor_driver_broken"}
			{if crew_in_place "driver"
				{if rand 0.5
					{with_linked_entity "driver"
						{health_damage_count 35
							{effects "" "hit" "hit" "die" "die"}
						}
					}
				}
			}
			{spawn "glass_hit2" volume x}
			{bone hide "visor_driver_mesh_damage"}					
			{bone show "visor_driver_mesh_destroy"}					
			{bone cut "visor_driver"}					
		else component "visor_gunner"
			{damage_report "visor_gunner" "component/visor_gunner_broken"}
			{if crew_in_place "driver"
				{if rand 0.5
					{with_linked_entity "driver"
						{health_damage_count 80
							{effects "" "hit" "hit" "die" "die"}
						}
					}
				}
			}
			{spawn "glass_hit2" volume x}
			{bone hide "visor_gunner_mesh_damage"}					
			{bone show "visor_gunner_mesh_destroy"}					
			{bone cut "visor_gunner"}					
		}		
		{if not fallen
			{if "light_on"
				{bone hide	"warm_glass_r_ems"}
				{bone hide	"warm_glass_l_ems"}
				{bone hide	"warm_glass_back"}
				{bone hide	"warm_glass_front"}
				{bone hide	"warm_glass_back_r_ems"}
				{bone hide	"warm_glass_back_l_ems"}
				{bone hide	"warm_light"}
				{bone hide	"warm_light_l"}
				{bone hide	"warm_light_r"}
				{bone hide	"warm_light_back"}
				{bone hide	"warm_light_front"}
				{set "light_on" 0}
			else
				{set "light_on" 1}
			}
			{delay_effect 0.5 "update_blinking"}
		else
			{kill_delay "update_blinking"}
			{bone hide	"warm_glass_r_ems"}
			{bone hide	"warm_glass_l_ems"}
			{bone hide	"warm_glass_back"}
			{bone hide	"warm_glass_front"}
			{bone hide	"warm_glass_back_r_ems"}
			{bone hide	"warm_glass_back_l_ems"}
			{bone hide	"warm_light"}
			{bone hide	"warm_light_l"}
			{bone hide	"warm_light_r"}
			{bone hide	"warm_light_back"}
			{bone hide	"warm_light_front"}
		}
		(define "glass_damaged" ;		
			{if component "%component"
				{bone cut "%component"}							
				{bone cut "%component_damage"}							
				{bone show "%component_broken"}							
				{spawn "glass_hit_car" volume x}
			}
		)
		("glass_damaged" component(glass_wind_b_r))
		("glass_damaged" component(glass_wind_b_l))
		("glass_damaged" component(glass_wind_up_r))
		("glass_damaged" component(glass_wind_up_l))
		("glass_damaged" component(glass_wind_f_l))
		("glass_damaged" component(glass_wind_f_r))
		("glass_damaged" component(front_glass)	)
		("glass_damaged" component(glass_doorb)	)
		("glass_damaged" component(glass_doorl)	)
		("glass_damaged" component(glass_doorl1))
		("glass_damaged" component(glass_doorl2))
		("glass_damaged" component(glass_doorl3))
		("glass_damaged" component(glass_doorr)	)
		("glass_damaged" component(glass_doorr1))
		("glass_damaged" component(glass_doorr2))
		("glass_damaged" component(glass_doorr3))
		("glass_damaged" component(glass_l_1)	)
		("glass_damaged" component(glass_l_2) 	)
		("glass_damaged" component(glass_l_3) 	)
		("glass_damaged" component(glass_r_1)	)
		("glass_damaged" component(glass_r_2) 	)
		("glass_damaged" component(glass_r_3) 	)
		("glass_damaged" component(front_glass_r) )
		("glass_damaged" component(front_glass_l) )		
		{if component "body"
			{call "explosion"}
			{view stop "ammo"}
		else component "engine"
			{call "_burn"}
			{view stop "ammo"}
		}
	}

	;/*=========== Hardcode Events End  ===========*/

	;/*=========== Engine Code Begin  ===========*/

	{on "engine_toggle" 		;// UI button to toggle engine on/off
		{if operatable
			{if work "engine"
				{if work "body"
					{if not "engine_on"
						{if not "toggle_delay"
							{call "engine_on"}
						}
					else not "toggle_delay"
						{call "engine_off"}
					}
				}
			else
				{tags add "engine_turned_off"}	;// allows engine to be set to off state when damaged. Cancels auto engine start on repair
			}
		}
		{set "toggle_delay" 1}			;// stops accidental double click of UI button
		{delay 1 {set "toggle_delay" 0}}
	}
	{on "engine_check" 		;// turns engine on at spawn if crewed and not tagged engine off
		{set "engine_check" 1}
		{delay 0.1
			{if tagged "engine_turned_off"
				{chassis_work 0}
				{set "engine_on" 0}
			else
				{if operatable
					{if tagged "hidden" 	;// mission script that hides unit
						{set "hidden" 1}
					else
						{if not cannon_state "fire" 	;// check for motorized cannons
							{call "engine_idle"}
						}
						{call "play_trace_engine"} 		;// plays dust fx for aero vehicles
						{call "update_lights"}
					}
				}
			}
			{set "engine_check" 0}
		}
	}
	{on "repaired_engine_check" 		;// turns engine on when repaired if crewed and not tagged engine off
		{if not "engine_check" 			;// stops call from happening at spawn
			{if operatable
				{if not tagged "engine_turned_off"
					{if not "engine_on"
						{call "engine_on"}
					}
				}
			}
		}
	}
	{on "engine_on" 			;// settings for engine when switched on
		{if work "body"
			{if work "engine"
				{tags remove "engine_turned_off"}
				{view show "stop_signal"}
				{view start "stop_signal"}
				{play_sound "engine_start"}
				{ani_play "engine_work" loop}
				{set "engine_on" 1}
				{call "update_lights"}
				{add_view	"exhaust_dark_big_startup"	"exhaust_start"	"FXsmoke1"}
				{add_view	"exhaust_dark_big_startup"	"exhaust_start"	"FXsmoke2"}
				{delay 1.5 "engine_startup"
					{view start "exhaust_start"}
					{delay 0.5
						{view pause "exhaust_start"}
					}
					{delay 1.25 "engine_startup2"
						{play_sound "exhaust"}
					}
					{delay 1.5 "engine_startup3"
						;{play_sound "exhaust"}
						{call "engine_idle"}
					}
				}
			}
		}
	}

	{on "engine_off" 						;// settings for engine when switched off
		{kill_delay "engine_startup"}		;// stops engine startup sequence
		{kill_delay "engine_startup2"}		;// stops engine startup sequence
		{kill_delay "engine_startup3"}		;// stops engine startup sequence
		{set "engine_on" 0}
		{call "update_lights"}
		{stop_sound "engine_idle"}
		{stop_sound "move"}
		{stop_sound "engine_full"}
		{stop_sound "engine_start"}
		{if not broken "engine"
			{if not broken "body"
				{play_sound "engine_stop"}
			}
		}
		{call "chassis_off"}
		{delay 1
			{view pause "exhaust2"}
			{ani_stop "engine_work"}
			{view hide "stop_signal"}
		}
	}

	{on "chassis_off"
		{tags add "engine_turned_off"}		;// tracks engine on/off status for mission save/load
		{chassis_work 0}
	}

	{on "engine_idle"					;// settings for engine while idle
		{if work "engine"
			{if work "trackleft"
				{if work "trackright"
					{if not tagged "wheel_destroyed"		;// Checks if wheel has been torn off
						{if not tagged "wheels_broken"		;// Checks if too many wheels are broken
							{chassis_work 1}
						}
					}
				}
			}
			{set "engine_on" 1}
			{view pause "exhaust_start"}
			{stop_sound "engine_start"}
			{play_sound "engine_idle" 1}
			{ani_play "engine_work" loop}
			{view start "exhaust2"}
			{view hide "stop_signal"}
		}
	}

	{on "engine stop view"				;// called on engine and body break
		{set "engine_on" 0}
		{call "update_lights"}
		{kill_delay "engine_startup"}		;// stops engine startup sequence
		{kill_delay "engine_startup2"}		;// stops engine startup sequence
		{kill_delay "engine_startup3"}		;// stops engine startup sequence
		{view pause "exhaust"}
		{stop_sound "engine_idle"}
		{stop_sound "engine_full"}
		{stop_sound "engine_start"}
		{ani_stop "engine_work"}
		{view pause "exhaust2"}
	}

	{on "engine fullstop"					;// called on explosion
		{set "engine_on" 0}
		{kill_delay "engine_startup"}		;// stops engine startup sequence
		{kill_delay "engine_startup2"}		;// stops engine startup sequence
		{kill_delay "engine_startup3"}		;// stops engine startup sequence
		{view pause "exhaust"}
		{ani_stop "engine_work"}
		{delay 0 "engine_stopped"
			{stop_sound "engine_idle"}
			{stop_sound "engine_start"}
			{stop_sound "engine_stop"}
		}
		{delay 0 "engine_steam_stopped"
			{view pause "exhaust2"}
		}
	}

	{on "update_moveable"
		{if work "engine"
			{call "check_work_mover"}
		else
			{chassis_work 0}
			{ik_enable "basis" 0}			;// stops motorized cannons from rotating when engine or track is broken
		}
	}

	{on "check_work_mover"
		{if work "mover"
			{if not tagged "wheel_destroyed"		;// Checks if wheel has been torn off
				{if not tagged "engine_turned_off"	;// Checks that player didn't turn off engine before repairs are made
					{if not tagged "wheels_broken"	;// Checks if too many wheels are broken
						{chassis_work 1}
						{ik_enable "basis" 1}	;// allows motorized cannons to rotate when engine or track is broken
					}
				}
			}
		else
			{chassis_work 0}
			{ik_enable "basis" 0}			;// stops motorized cannons from rotating when engine or track is broken
		}
	}

	{on "stop_on"
		{tags add "stop"}
		{if tagged "hook_open" 
			{ani_play "opened_stop" 0.5}
		}
		{if tagged "stop" 
			{ani_play "move_hit"}
		}
		{bone show	"stop_light"}
		{bone show	"stop_light_up_nolight"}
		{bone show	"stop_light_up"}
		{bone show	"stop_light_l"}
		{bone show	"stop_light_r"}
		{bone show	"stop_light_l_add"}
		{bone show	"stop_light_r_add"}
		{bone show	"stop_glass_l_ems"}
		{bone show	"stop_glass_r_ems"}
		{bone show	"stop_light_l_ems"}
		{bone show	"stop_light_r_ems"}
		{ani_stop "move"}
		{ani_stop "start"}
		{ani_play "stop"}
		{view show "stop_signal"}
		{view start "stop_signal"}
		{delay 0.5
			{view hide "stop_signal"}
			{view stop "stop_signal"}
			{view show 	"stop_signal_linear"}
			{view start "stop_signal_linear"}
		}
		{delay 3
			{tags remove "stop"}
		}
		{delay 1
			{view hide "stop_signal_linear"}
			{view stop "stop_signal_linear"}
			{bone hide	"stop_glass_l_ems"}
			{bone hide	"stop_glass_r_ems"}
			{bone hide	"stop_light_l_ems"}
			{bone hide	"stop_light_r_ems"}
			{bone hide	"stop_light_l_add"}
			{bone hide	"stop_light_r_add"}
			{bone hide	"stop_light_up_nolight"}
			{bone hide	"stop_light_up"}
			{bone hide	"stop_light_l"}
			{bone hide	"stop_light_r"}
			{bone hide	"stop_light"}
		}
		{if work "body"						;// Prevents animations from reseting body break animations if vehicle is moving on break
			{if not "animated"				;// Prevents animation from playing when "start" animation is currently playing
				;{ani_stop "start"}
				{ani_play "stop" 1.0 callback}
				{set "animated" 1}
			}
		}
	}

	{on "exhaust_on"
		{if "engine_on"						;// Prevents sounds from playing if called after engine is off/broken
			{spawn "fx_engine_obstacles" "fxsmoke" x}
			{spawn "fx_engine_obstacles" "fxsmoke1" x}
			{view start "exhaust"}
			{play_sound "exhaust"}
		}
	}

	{on "exhaust_off"
;//		{stop_sound "exhaust"}
		{view pause "exhaust"}
		{view start "exhaust2"}				;// idle exhaust
	}

	;/*=========== Engine Code End  ===========*/

	;/*=========== Light FX Begin  ===========*/

	{on "lights_on"
		{view start "lights"}
		{view show "lights"}
	}
	{on "lights_off"
		{view stop "lights"}
		{view hide "lights"}
	}
	{on "update_lights"
		{if not sunlight					;// checks if night time to show headlight fx
			{if "engine_on"
				{call "lights_on"}
			else
				{call "lights_off"}
			}
		else
			{call "lights_off"}
		}
		{if rain							;// checks if raining to play windshield wipers
			{if "engine_on"
				{ani_play "wipers" loop resume}
			else
				{ani_stop "wipers"}
			}
		else
			{ani_stop "wipers"}
		}
	}

	{on "environment_changed"				;// mission script event call to check daytime for vehicle lights
		{call "update_lights"}
	}

	;/*=========== Light FX End  ===========*/

	;/*=========== Damage Begin  ===========*/

	{on "grenade_stick"
		{with_effector
			{link_grenade_to_nearest_human}
		}
	}

	{on "break_glass"
		{volume disable all}
	 	{spawn "glass_break2" volume x}
	 	{delay_ex 0.05 uniq
		 	{bone cut}
	 	}
	}
	
	{on "break_lamp"
		{volumes "lamp" disable all}
	 	{spawn "glass_break2" volume x}
	}

	{on "explosion"
		{if not able "exploded"
			{tags add "ammo_cooked"}
			{stop_sound "cook_off"}
			{tags remove "ammo_overload"}
			{tags remove "ammo_normal_load"}
			{damage_report "body" "component/empty"}
			{damage_report "engine" "component/empty"}
			{damage_report "trackright" "component/empty"}
			{damage_report "trackleft" "component/empty"}
			{damage_report "turret" "component/empty"}
			{damage_report "gun" "component/empty"}
			{damage_report "mantlet" "component/empty"}
			{able "exploded" 1}
			{call "_explosion"}
			{stop_sound "engine_idle"}
		}
	}

	{on "_explosion" sync
		{tags add "exploded"}
		{call "break_all"}
		{stop_sound "move"}
		{stop_sound "move_end"}
		{stop_sound "engine_full"}
		{stop_sound "engine_stop"}
		{stop_sound "exhaust"}
		{call "engine fullstop"}
		{view stop "fire1"}
		{view stop "fire2"}
		{tags add "destroyed"}
		{kick_entity_manager}
		{volumes disable blast}
		{call "explosion_sound"}
		{if not terrain_fx "bridge"
			{if not terrain_fx "bridge_wood"
				{if not under_water
					{call "spawn_shellhole"}
				}
			}
		}

		{delay_ex 0
			{set "no_burn_volumes" 1}
			{set_skeleton "_xx" sync}
			{call "impulse"}
			{ani_play "death"}
			{call "cut_parts"}
		}
		{delay 0.2
			{restore_volume_states} ; restore volume ables from .def file
		}
	}
	{on "impulse"
		{impulse up 0.01}
	}

	{on "break_all"
		{kill_crew}
		{drop_orders}
		{components destroy}
		{reset_manual_control}
		{able select 0}
		{able repaired 0}
		{unlink_trailer}
		{clear_inventory}
	}

	{on "kill_crew"
		{kill_crew}
	}

	{on "explosion_sound"
		{if "crush"
			{start_sound "crush/medium/vehicle"}
		else
			{call "explosion_blastwave"}
		}
	}

	{on "explosion_blastwave"
		{blastwave c4 3 r0 3 r1 8}
	}

	{on "_burn"
		{if not tagged "burned"
			{if not able "exploded"
				{talk "burning"}
				{damage_report "engine" "component/engine_burn"}
				{add_view "smoke_fire_engine" "burn_fire" "FXfire1"}
				{add_view "smoke_engine" "burn_fire_smoke" "FXfire1"}
				;{add_view "smoke_black" "burn_fire" "FXfire1"}
				{view start "burn_fire"}
				{burn time 12}
				{tags add "burned"}
				{play_sound "flame" 1}
				{set "burn_fire" 1}
				{call "stat_break"}
				{tags add "no_scavenge"}
				{delay 4 2
					{unlink_trailer}
					{call_synced "check_burn_emit"}
				}
				{delay 10 2
					{components "engine" break}
					{start_sound "crush/medium/metal"}
					{delay 5 4
						{call_synced "hull_destroyed"}
						{call_synced "car_destroyed"}
					}
				}
				{delay 180
					{view start "burn_fire_smoke"}
					{delay 900
						{view stop "burn_fire_smoke"}
					}
					{delay 2
						{view stop "burn_fire"}
					}
					{stop_sound "flame"}
					{set "burn_fire" 0}
					{able "burning" 0}
				}
			}
		}
	}

	{on "burn_emit"
		{if not able "burning"
			{able "burning" 1}
			{set_heater}
			{reset_manual_control}
		}
	}

	{on "burn_volume"
		{if not burned
			{if volume "engine"
				{call "_burn"}
			else volume "engine1"
				{call "_burn"}
			}
		}
	}

	{on "stat_break"
		{if not tagged "body_break"
			{if not "broken"
				{set "broken" 1}
				{if "burn_fire"
					{stat_notify break burned}
				else
					{stat_notify break}				;// stat_notify - used for correct stats gathering
				}
			}
		}
	}

	{on "leave_unit"
		{if work "body"
			{if operatable
				{tags add "leave_unit"}
				{unlink_trailer}
				{reset_manual_control}

				{if not tagged "emit_label"
					{damage_report "crew" "component/leave_unit"}
					{tags add "emit_label"}
					{crew_emit}
				}
				{delay 2
					{if not tagged "_abandoned"
						{crew_emit}
					}
				}
				{delay 5
					{if not tagged "_abandoned"
						{crew_emit}
					}
				}
				{delay 8
					{if not tagged "_abandoned"
						{crew_emit}
					}
				}
				{delay 11
					{if not tagged "_abandoned"
						{crew_emit}
					}
					{tags remove "_abandoned"}
				}

				{delay 16
					{if not operatable
						{tags add "_abandoned"}
						{set "broken" 1}
						{able select 0}
						{able repaired 0}
						{explosive 1}
						{stat_notify leave}
						{kick_entity_manager}
						{damage_report "gun" "component/empty"}
						{damage_report "mantlet" "component/empty"}
						{damage_report "turret" "component/empty"}
						{damage_report "body" "component/empty"}
						{damage_report "trackright" "component/empty"}
						{damage_report "trackleft" "component/empty"}
						{damage_report "engine" "component/empty"}

						{delay 0.25
							{explosive 0}
							{tags add "destroyed"}
							{tags add "ammo_broken"}
							{call "explosion"}
						}
					}
				}
			}
		}
	}

	;/*=========== Damage End  ===========*/

	{on ground_hit
		{if volume "mirror"
			{tear "piece_medium_misc" bone from_volume
				{impulse up 0.1 dir 1 0.5}
			}
		}
		{if velocity 50
			{if volume "heavy_part"
				{if rand 0.3
					{if material "steel"
						{tear "piece_medium_steel" bone from_volume
							{impulse up 0.1 dir 3 1}
						}
					else material "armor"
						{tear "piece_medium_steel" bone from_volume
							{impulse up 0.1 dir 3 1}
						}
					else material "misc"
						{tear "piece_medium_misc" bone from_volume
							{impulse up 0.1 dir 3 1}
						}
					}
				}
			}
			{if volume "med_part"
				{if rand 0.5
					{if material "steel"
						{tear "piece_medium_steel" bone from_volume
							{impulse up 0.1 dir 2 1}
						}
					else material "armor"
						{tear "piece_medium_steel" bone from_volume
							{impulse up 0.1 dir 2 1}
						}
					else material "misc"
						{tear "piece_medium_misc" bone from_volume
							{impulse up 0.1 dir 2 1}
						}
					}
				}
			}
			{if volume "small_part"
				{if rand 0.8
					{if material "steel"
						{tear "piece_small_steel" bone from_volume
							{impulse up 0.5 dir 5 1}
						}
					else material "armor"
						{tear "piece_small_steel" bone from_volume
							{impulse up 0.5 dir 5 1}
						}
					else material "misc"
						{tear "piece_small_misc" bone from_volume
							{impulse up 0.5 dir 5 1}
						}
					}
				}
			}
			{if volume "light_part"
				{if rand 0.8
					{if material "steel"
						{tear "piece_small_steel" bone from_volume
							{impulse up 0.5 dir 5 1}
						}
					else material "armor"
						{tear "piece_small_steel" bone from_volume
							{impulse up 0.5 dir 5 1}
						}
					else material "misc"
						{tear "piece_small_misc" bone from_volume
							{impulse up 0.5 dir 5 1}
						}
					}
				}
			}
			{if volume "armor_tear"
				{if rand 0.3
					{if material "steel"
						{tear "piece_small_steel" bone from_volume
							{impulse up 0.5 dir 5 1}
						}
					else material "armor"
						{tear "piece_small_steel" bone from_volume
							{impulse up 0.5 dir 5 1}
						}
					else material "misc"
						{tear "piece_small_misc" bone from_volume
							{impulse up 0.5 dir 5 1}
						}
					}
				}
			}
		}
		{if velocity 25
			{if volume "med_part"
				{if rand 0.2
					{if material "steel"
						{tear "piece_medium_steel" bone from_volume
							{impulse up 0.1 dir 2 1}
						}
					else material "armor"
						{tear "piece_medium_steel" bone from_volume
							{impulse up 0.1 dir 2 1}
						}
					else material "misc"
						{tear "piece_medium_misc" bone from_volume
							{impulse up 0.1 dir 2 1}
						}
					}
				}
			}
			{if volume "light_part"
				{if rand 0.4
					{if material "steel"
						{tear "piece_small_steel" bone from_volume
							{impulse up 0.5 dir 5 1}
						}
					else material "armor"
						{tear "piece_small_steel" bone from_volume
							{impulse up 0.5 dir 5 1}
						}
					else material "misc"
						{tear "piece_small_misc" bone from_volume
							{impulse up 0.5 dir 5 1}
						}
					}
				}
			}
			{if volume "glass_holded"
				{if rand 0.8
					{volume disable bullet contact}
					{spawn "glass_hit2" volume x}
					{delay_ex 0.1 uniq
						{bone cut}
					}
				}
			}
			{if volume "part_wood"
				{if rand 0.6
					{start_sound "crush/small/wood/"}
					{spawn "wood_crush_small" "basis"}
					{tear "piece_small_wood" bone from_volume
						{impulse up 3 1 dir 3 1 cx 6 2 cy 6 2 rnd_dir 4 no_position}
					}	
				}
			}
			{if volume "hook"
				{if rand 0.7
					{if tagged "hook_open" 
						{ani_play "opened_hit" 1}
					}
				else rand 0.1
					{start_sound "push/metallocker/close/"}
					{tags add "close"}
					{ani_play "open" -1.5}
					{delay 0.1
						{volumes "hook_open" disable touch}
						{delay 3
							{volumes "hook_open" enable touch}
						}
					}
					{tags remove "hook_open"}
				}
			}
			{if volume "ballon"
				{link_sound "ballon" "detonation/fireextinguisher/explosion_fireextinguisher"}
				{play_sound "ballon" 1}
				{burn fx "extingusher_hit" time 2}	
				{volume disable bullet}
				{delay 2
					{stop_sound "ballon" 1}
				}
			}					
			{if volume "compressor"
				{bone show	"system_warning"}
				{spawn "ex_propane" "compressor" }	
				{bullet_detonate}
				{blastwave c4 0.5 r0 0.5 r1 0.5}
				{spawn "balon_blast" "compressor" }
				{bone cut "compressor"}
			}
			{if prop "glass_damaged"
				(define "glass_damaged" ;
					{if volume "%component"
						{if not work "%component"
							{if rand %rand
								{components "%component" destroy}
							}
						else rand %rand
							{components "%component" break}
						}
					}
				)
				("glass_damaged" component(glass_wind_b_r)  	rand(0.1)    )
				("glass_damaged" component(glass_wind_b_l)  	rand(0.1)    )
				("glass_damaged" component(glass_wind_up_r)  	rand(0.1)    )
				("glass_damaged" component(glass_wind_up_l)  	rand(0.1)    )
				("glass_damaged" component(glass_wind_f_l)  	rand(0.1)    )
				("glass_damaged" component(glass_wind_f_r)  	rand(0.1)    )
				("glass_damaged" component(front_glass)  	rand(0.1)    )
				("glass_damaged" component(glass_doorb)  	rand(0.1)    )
				("glass_damaged" component(glass_doorl)  	rand(0.3)    )
				("glass_damaged" component(glass_doorl1)  	rand(0.3)    )
				("glass_damaged" component(glass_doorl2)  	rand(0.3)    )
				("glass_damaged" component(glass_doorl3)  	rand(0.3)    )
				("glass_damaged" component(glass_doorr)  	rand(0.3)    )
				("glass_damaged" component(glass_doorr1)  	rand(0.3)    )
				("glass_damaged" component(glass_doorr2)  	rand(0.3)    )
				("glass_damaged" component(glass_doorr3)  	rand(0.3)    )
				("glass_damaged" component(glass_l_1)    	rand(0.3)   )
				("glass_damaged" component(glass_l_2)   	rand(0.3)    )
				("glass_damaged" component(glass_l_3)   	rand(0.3)    )
				("glass_damaged" component(glass_r_1)   	rand(0.3)    )
				("glass_damaged" component(glass_r_2)   	rand(0.3)    )
				("glass_damaged" component(glass_r_3)   	rand(0.3)    )
				("glass_damaged" component(front_glass_r)   	rand(0.2)    )
				("glass_damaged" component(front_glass_l)   	rand(0.2)    )
			}			
			(define "wheel_damage" ;
				{if volume "%component"
					{if work "%component" 
						{components "%component" break}
						{start_sound "vehicle/suspension/"}
						{bone show "%component_damage"}
						{view hide "%component"}
						{tags add "%component_damage"}
					}
				}
			)
			("wheel_damage" component(wheelr1)     )
			("wheel_damage" component(wheelr2)     )
			("wheel_damage" component(wheelr3)     )
			("wheel_damage" component(wheelr4)     )
			("wheel_damage" component(wheelr5)     )
			("wheel_damage" component(wheelr6)     )
			("wheel_damage" component(wheelr7)     )
			("wheel_damage" component(wheelr8)     )
			("wheel_damage" component(wheelr9)     )
			("wheel_damage" component(wheelr10)     )
			("wheel_damage" component(wheelr11)     )
			("wheel_damage" component(wheelr12)     )
			("wheel_damage" component(wheelr13)     )
			("wheel_damage" component(wheell1)     )
			("wheel_damage" component(wheell2)     )
			("wheel_damage" component(wheell3)     )
			("wheel_damage" component(wheell4)     )
			("wheel_damage" component(wheell5)     )
			("wheel_damage" component(wheell6)     )
			("wheel_damage" component(wheell7)     )
			("wheel_damage" component(wheell8)     )
			("wheel_damage" component(wheell9)     )
			("wheel_damage" component(wheell10)     )
			("wheel_damage" component(wheell11)     )
			("wheel_damage" component(wheell12)     )
			("wheel_damage" component(wheell13)     )
			{if volume "wheel"
				(define "terrain_fx"
					{if terrain_fx %0 
						{play_sound "brake_%1"}
					}
				)
				("terrain_fx" args "ground" 						ground 			 	)
				("terrain_fx" args "grass" 							ground 			 	)
				("terrain_fx" args "road" 							road 		 	)
				("terrain_fx" args "country_road" 					road 			 	)
				("terrain_fx" args "sand" 							sand 			 	)
				("terrain_fx" args "snow" 							ground 			 	)
				("terrain_fx" args "water" 							water 			 	)
				("terrain_fx" args "bridge" 						road 			   )
				("terrain_fx" args "bridge_wood" 					road		   )
				("terrain_fx" args "floor" 							road 			   )
				("terrain_fx" args "rock" 							ground 			   )
				("terrain_fx" args "metal" 							road 			   )
				("terrain_fx" args "shoot_emit_mtl" 				road 			 )
				("terrain_fx" args "shoot_emit_ext_sand" 			sand 			 )
				("terrain_fx" args "shoot_emit_ext" 				ground 			 )
				("terrain_fx" args "shoot_emit_int" 				ground 			 )
			else
				{play_sound "brake_short"}
			}
		}
	}
	;/*=========== Terrain FX Begin  ===========*/

	(define "terrain_fx"
		{on terrain_fx %0 enter
			{set %0 1}
			{call "check_speed"}
			{view start "on_%1_time_short"}	;// gravel/mud/grass fx
			{play_sound "wheel_%1" 1}
			{call "%3_check"}
			{call "%2_stop_check"}
			{delay 0.1
				{view pause "on_%1_time_short"}
			}
		}
		{on terrain_fx %0 leave
			{set %0 0}
			{view pause "on_%1"}
			{view pause "on_%1_fast"}
			{view pause "on_%1_medium"}
			{view pause "on_%1_slow"}
			{stop_sound "wheel_%1"}
;//			{call "%2_stop_check"}
			{kill_delay "check_speed"}
		}
	)

	("terrain_fx" args "ground"			ground water)
	("terrain_fx" args "sand"			sand water)
	("terrain_fx" args "grass" 			grass water)
	("terrain_fx" args "deep_water" 	water none water)
	("terrain_fx" args "water" 			water none water)
	("terrain_fx" args "shallow_water"	puddle none water)
	("terrain_fx" args "puddle"			puddle water)
	("terrain_fx" args "mud"			mud water)
	("terrain_fx" args "swamp"			mud water)
	("terrain_fx" args "country_road"	ground water)
	("terrain_fx" args "snow"			snow water)
	("terrain_fx" args "ice"			snow none  water)
	("terrain_fx" args "road"			road water)
	("terrain_fx" args "rock"			rock water)
	("terrain_fx" args "bridge"			road water)
	("terrain_fx" args "bridge_wood"	wood water)

	{on "water_check"}
	{on "water_stop_check"}

	{on "check_speed"
		{call "vehicle_velocity"}
		{delay 0.5 "check_speed"
			{call "check_speed"}
		}
	}

	{on "vehicle_velocity"
		(define "terrain_fx2"
			{if %0
				{if velocity 30
					{view start "on_%1_fast"}
					{view pause "on_%1_medium"}
					{view pause "on_%1_slow"}
					{view start "on_%1"}		;// presevers fx for non-tank vehicles
				else velocity 15
					{view pause "on_%1_fast"}
					{view start "on_%1_medium"}
					{view pause "on_%1_slow"}
					{view start "on_%1"}		;// presevers fx for non-tank vehicles
				else velocity 5
					{view pause "on_%1_fast"}
					{view pause "on_%1_medium"}
					{view start "on_%1_slow"}
					{view start "on_%1"}		;// presevers fx for non-tank vehicles
				else
					{view pause "on_%1_fast"}
					{view pause "on_%1_medium"}
					{view pause "on_%1_slow"}
					{view pause "on_%1"}		;// presevers fx for non-tank vehicles
				}
			}
		)
		("terrain_fx2" args "ground"		ground)
		("terrain_fx2" args "sand"			sand)
		("terrain_fx2" args "grass" 		grass)
		("terrain_fx2" args "water" 		water)
		("terrain_fx2" args "shallow_water"	puddle)
		("terrain_fx2" args "puddle"		puddle)
		("terrain_fx2" args "mud"			mud)
		("terrain_fx2" args "country_road"	ground)
		("terrain_fx2" args "snow"			snow)
		("terrain_fx2" args "ice"			snow)
		("terrain_fx2" args "road"			road)
		("terrain_fx2" args "rock"			rock)
		("terrain_fx2" args "bridge"		road)
		("terrain_fx2" args "bridge_wood"	wood)
	}

	{on "explosion_delete"
		{set "delete_parts" 1}
		{call "explosion"}
		{delay 20
			{hide 3}
		}
	}

	;/*=========== Terrain FX End  ===========*/

	;/*=========== Weapon FX Begin  ===========*/

	{on "init_gun"
		{add_view	"flash_gun_big"	"flashbarrel3"	"Foresight3"}
		{add_view	"flash_gun_big"	"flashbarrel4"	"Foresight4"}
		{add_view	"flash_gun_big"	"flashbarrel5"	"Foresight5"}
		{add_view	"flash_gun_big"	"flashbarrel6"	"Foresight6"}
		{add_view	"flash_gun_big"	"flashbarrel7"	"Foresight7"}
		{add_view	"flash_gun_big"	"flashbarrel3"	"Foresight14"}
	}

	{on "link_weapon"
		{if effector "stuff weapon"
			{with_effector
				{call "link"}
			}
		}
	}

	(define "on_fire_mgun"
		{on fire "%0"
			{if effector "stuff weapon"
				{with_effector
					{call "fire"}
				}
			else
				{play_sound  "action_recoil"}
				{play_sound "MG_Mid"}
				{play_sound "MG_Far"}
				{view start "%1"}
				{delay 0.2
					{view pause "%1"}
				}
			}
		}
	)

	("on_fire_mgun" args mgun flashbarrel3)
	("on_fire_mgun" args mgun1 flashbarrel4)
	("on_fire_mgun" args mgun2 flashbarrel5)
	("on_fire_mgun" args mgun3 flashbarrel6)
	("on_fire_mgun" args mgun4 flashbarrel7)

	{on "zenite_terrain_fx"
		{if not rain
			{if terrain_fx "ground"
				{view start "zenite_ground_fx"}
			else terrain_fx "mud"
				;//none
			else terrain_fx "water"
				;//none
			else terrain_fx "shallow_water"
				;//none
			else terrain_fx "sand"
				{view start "zenite_sand_fx"}
			else terrain_fx "snow"
				{view start "zenite_snow_fx"}
			else terrain_fx "ice"
				{view start "zenite_snow_fx"}
			else
				{view start "zenite_ground_fx"}
			}
		else
			;//do nothing
		}
	}

	{on "minimum_terrain_fx"
		{if not rain
			{if terrain_fx "ground"
				{view start "minimum_ground_fx"}
			else terrain_fx "mud"
				;//none
			else terrain_fx "water"
				;//none
			else terrain_fx "shallow_water"
				;//none
			else terrain_fx "sand"
				{view start "minimum_sand_fx"}
			else terrain_fx "snow"
				{view start "minimum_snow_fx"}
			else terrain_fx "ice"
				{view start "minimum_snow_fx"}
			else
				{view start "minimum_ground_fx"}
			}
		else
			;//do nothing
		}
	}

	{on "small_terrain_fx"
		{if not rain
			{if terrain_fx "ground"
				{view start "small_ground_fx"}
			else terrain_fx "mud"
				;//none
			else terrain_fx "water"
				;//none
			else terrain_fx "shallow_water"
				;//none
			else terrain_fx "sand"
				{view start "small_sand_fx"}
			else terrain_fx "snow"
				{view start "small_snow_fx"}
			else terrain_fx "ice"
				{view start "small_snow_fx"}
			else
				{view start "small_ground_fx"}
			}
		else
			{if terrain_fx "ground"
				{view start "small_ground_r_fx"}
			else terrain_fx "water"
				;//none
			else terrain_fx "shallow_water"
				;//none
			else terrain_fx "sand"
				{view start "small_sand_r_fx"}
			else terrain_fx "snow"
				{view start "small_snow_fx"}
			else terrain_fx "ice"
				{view start "small_snow_fx"}
			else
				{view start "small_ground_r_fx"}
			}
		}
	}

	{on "medium_terrain_fx"
		{if not rain
			{if terrain_fx "ground"
				{view start "medium_ground_fx"}
			else terrain_fx "mud"
				;//none
			else terrain_fx "water"
				;//none
			else terrain_fx "shallow_water"
				;//none
			else terrain_fx "sand"
				{view start "medium_sand_fx"}
			else terrain_fx "snow"
				{view start "medium_snow_fx"}
			else terrain_fx "ice"
				{view start "medium_snow_fx"}
			else
				{view start "medium_ground_fx"}
			}
		else
			{if terrain_fx "ground"
				{view start "medium_ground_r_fx"}
			else terrain_fx "water"
				;//none
			else terrain_fx "shallow_water"
				;//none
			else terrain_fx "sand"
				{view start "medium_sand_r_fx"}
			else terrain_fx "snow"
				{view start "medium_snow_fx"}
			else terrain_fx "ice"
				{view start "medium_snow_fx"}
			else
				{view start "medium_ground_r_fx"}
			}
		}
	}

	{on "large_terrain_fx"
		{if not rain
			{if terrain_fx "ground"
				{view start "large_ground_fx"}
			else terrain_fx "mud"
				;//none
			else terrain_fx "water"
				;//none
			else terrain_fx "shallow_water"
				;//none
			else terrain_fx "sand"
				{view start "large_sand_fx"}
			else terrain_fx "snow"
				{view start "large_snow_fx"}
			else terrain_fx "ice"
				{view start "large_snow_fx"}
			else
				{view start "large_ground_fx"}
			}
		else
			{if terrain_fx "ground"
				{view start "large_ground_r_fx"}
			else terrain_fx "water"
				;//none
			else terrain_fx "shallow_water"
				;//none
			else terrain_fx "sand"
				{view start "large_sand_r_fx"}
			else terrain_fx "snow"
				{view start "large_snow_fx"}
			else terrain_fx "ice"
				{view start "large_snow_fx"}
			else
				{view start "large_ground_r_fx"}
			}
		}
	}

	{on "maximum_terrain_fx"
		{if not rain
			{if terrain_fx "ground"
				{view start "maximum_ground_fx"}
			else terrain_fx "mud"
				;//none
			else terrain_fx "water"
				;//none
			else terrain_fx "shallow_water"
				;//none
			else terrain_fx "sand"
				{view start "maximum_sand_fx"}
			else terrain_fx "snow"
				{view start "maximum_snow_fx"}
			else terrain_fx "ice"
				{view start "maximum_snow_fx"}
			else
				{view start "maximum_ground_fx"}
			}
		else
			{if terrain_fx "ground"
				{view start "maximum_ground_r_fx"}
			else terrain_fx "water"
				;//none
			else terrain_fx "shallow_water"
				;//none
			else terrain_fx "sand"
				{view start "maximum_sand_r_fx"}
			else terrain_fx "snow"
				{view start "maximum_snow_fx"}
			else terrain_fx "ice"
				{view start "maximum_snow_fx"}
			else
				{view start "maximum_ground_r_fx"}
			}
		}
	}

	{on "reload"
		{if effector "stuff weapon"
			{set "delete_parts" 1}				;// defined in dummy.inc hides torn magazine after delay.
			{with_effector
				{call "weapon_reload"}			;// defined in stuff.inc
			}
		}
	}

	;/*=========== Weapon FX End  ===========*/

	;/*=========== Constructor Begin  ===========*/

	(define "cannon_sandbag"
		{call "deactivate_vehicle"}
		{start_sound "vehicle/deploy/foxhole"}
		{delay 5
			{start_sound "vehicle/construction/entrench"}
			{if terrain_fx "ice"
				{spawn %0 %1 x constrain_after_dir {tex_mod "win"}}
			else terrain_fx "snow"
				{spawn %0 %1 x constrain_after_dir {tex_mod "win"}}
			else
				{spawn %0 %1 x constrain_after_dir}
			}
			{call "activate_vehicle"}
		}
	)
	{on "construction_sandbag_cannon_shallow"
		("cannon_sandbag" args "sandbag_cannon_shallow" "basis")
	}

	{on "construction_sandbag_cannon_standard"
		("cannon_sandbag" args "sandbag_cannon_standard" "basis")
	}

	;/*=========== Constructor End  ===========*/

	{on "activate_vehicle"
		{call "update_moveable"}
		{if work "turret" {ik_enable "turret" 1}}
		{if work "gun" {weapon_work "gun" 1}}
		{if work "gun1" {weapon_work "gun1" 1}}
		{if work "gun2 "{weapon_work "gun2" 1}}
		{if work "gun3 "{weapon_work "gun3" 1}}
		{weapon_work "mgun" 1}
		{weapon_work "mgun1" 1}
		{weapon_work "mgun2" 1}
		{weapon_work "mgun3" 1}
		{weapon_work "mgun4" 1}
		{weapon_work "mgun5" 1}
		{tags remove "deactivated"}
	}

	{on "deactivate_vehicle"
		{if "engine_on"
			{set "toggle_delay" 0}
			{call "engine_toggle"}
		}
		{chassis_work 0}
		{ik_enable "turret" 0}
		{weapon_work "gun" 0}
		{weapon_work "gun1" 0}
		{weapon_work "gun2" 0}
		{weapon_work "gun3" 0}
		{weapon_work "mgun" 0}
		{weapon_work "mgun1" 0}
		{weapon_work "mgun2" 0}
		{weapon_work "mgun3" 0}
		{weapon_work "mgun4" 0}
		{weapon_work "mgun5" 0}
		{tags add "deactivated"}
	}

	{on "emit_crew"
		{delay 4
			{if not tagged "_abandoned"
				{crew_emit}
			}
		}
		{delay 8
			{if not tagged "_abandoned"
				{crew_emit}
			}
		}
		{delay 12
			{if not tagged "_abandoned"
				{crew_emit}
			}
		}
		{delay 16
			{if not tagged "_abandoned"
				{crew_emit}
			}
		}
	}

	{on "disable_all_seats"
		{crew_enable group "crew" 0}
		{crew_enable group "passenger" 0}
	}

	{on "enable_all_seats"
		{crew_enable group "crew" 1}
		{crew_enable group "passenger" 1}
	}
	{on animation_event "small_light"	
		{if not tagged "small_light"
			{view start "small_light"}
			{view show "small_light"}
			{tags add "small_light"}
		else
			{view hide "small_light"}
			{view stop "small_light"}
			{tags remove "small_light"}
		}
	}
	{on animation_event "small_light_doors"	;small_light_doors
		{if not tagged "small_light_doors"
			{view start "small_light_doors"}
			{view show "small_light_doors"}
			{tags add "small_light_doors"}
		else
			{view hide "small_light_doors"}
			{view stop "small_light_doors"}
			{tags remove "small_light_doors"}
		}
	}
	{on animation_event "start_turret"	
		{tags add "start_turret"}
		{stop_sound "servomotor_h_end"}
		{play_sound "servomotor_h_start" }
		{delay 0.2 
			{play_sound "servomotor_h_loop" 1}
		}
	}
	{on animation_event "end_turret"					
		{tags remove "start_turret"}
		{stop_sound "servomotor_h_loop"}
		{play_sound "servomotor_h_end" }
	}

	{on animation_end "start"					;// Removes interaction check when animation is over allowing "stop" animation to play
		{set "animated" 0}
	}

	{on animation_end "stop"					;// Removes interaction check when animation is over allowing "start" animation to play
		{set "animated" 0}
	}

	{on animation_event "open"					;// event created by animation
		{play_sound "open"}
	}
	{on animation_event "close"					;// event created by animation
		{play_sound "close"}
	}
	{on animation_event "open_driver"			;// event created by animation
		{play_sound "open_driver"}
	}
	{on animation_event "close_driver"			;// event created by animation
		{play_sound "close_driver"}
	}
	{on animation_event "hatch_heavy"			;// event created by animation
		{play_sound "hatch_heavy"}
	}
	{on animation_event "hatch_medium"			;// event created by animation
		{play_sound "hatch_medium"}
	}
	{on animation_event "hatch_light"			;// event created by animation
		{play_sound "hatch_light"}
	}
	{on animation_event "hatch_visor"			;// event created by animation
		{play_sound "hatch_visor"}
	}
	{on animation_event "door_open_cars"
		{tags add "open_doors"}
		{start_sound "doors/car/in"}	
	}
	{on animation_event "door_close_cars"					
		{tags remove "open_doors"}
		{start_sound "doors/car/out"}	
	}
	{on animation_event "door_open_cars_civ"					
		{tags add "open_doors"}
		{start_sound "doors/civilian/in"}	
	}
	{on animation_event "door_close_cars_civ"					
		{tags remove "open_doors"}
		{start_sound "doors/civilian/out"}	
	}
	{on animation_event "door_open_truck"					
		{tags add "open_doors"}
		{start_sound "doors/truck/in"}	
	}
	{on animation_event "door_close_truck"					
		{tags remove "open_doors"}
		{start_sound "doors/truck/out"}	
	}

	{on "supply_mark"							;// mission helper
		{view start "ammo"}
	}

	(define "rand_cut"
		{if rand 0.5
			{bone cut %0}
		}
	)
	(define "rand_cut_else"
		{if rand 0.5
			{bone cut %0}
		else
			{bone cut %1}
		}
	)
	(define "rand_cut_else_3"
		{if rand 0.33
			{bone cut %0}
		else rand 0.33
			{bone cut %1}
		else
			{bone cut %2}
		}
	)

	(define "animation_sound"
		{on animation_event %0
			{play_sound %0}
		}
	)
}

;/*=========== Vehicle End ===========*/

;/*=========== General Props Begin ===========*/


{"no_sandbags"
	{on "construction_sandbag_cannon_shallow" overload}
	{on "construction_sandbag_cannon_standard" overload}
}

{"explosion_throw_crew vehicle"
	{on "_explosion"
		{call "crew_throw"}
	}
	
	{on "crew_throw"
		{crew_throw_off up 4 1 dir 5 1 turn 0 270 forward 2 rnd_die 1}
	}

	{on "break_all" overload
		{drop_orders}
		{components destroy}
		{reset_manual_control}
		{able select 0}
		{able repaired 0}
		{unlink_trailer}
		{clear_inventory}
	}
}

{"emit_on_sink vehicle"
	{on "water_check" overload
		{delay 0.3 "start_check_sinking"
			{call "check_sinking"}
		}
	}
	{on "water_stop_check" overload
		{kill_delay "start_check_sinking"}
		{kill_delay "check_sinking"}
	}
	{on "check_sinking"
		{call "check_water_level"}
		{if able "sinking"
			{call "emit_crew"}
			{reset_manual_control}
			{able "select" 0}
			{call "engine_off"}
			{call "stat_break"}
			{able minimap 0}
		else
			{delay 0.5 "check_sinking"
				{call "check_sinking"}
			}
		}
	}
	{on "check_water_level"
		{if water_level 1.2
			{able "sinking" 1}
			{tags add "no_scavenge"}
		else
			{able "sinking" 0}
		}
	}
}

{"with_gun vehicle"
	{on spawn
		{call "update_gun"}
		{set "rotate_gun" 0}
		{set "rotate_turret" 0}
	}
	{on break
		{if not tagged "exploded"
			{if component "gun"
				{call "update_gun"}
				{tags add "gun_brake"}
				{talk "broken_gun"}
			}
			{if component "gun1"
				{call "update_gun"}
				{tags add "gun1_brake"}
				{talk "broken_gun"}
			}
		}
	}
	{on repair
		{if component "gun"
			{call "update_gun"}
			{tags remove "gun_brake"}
		}
		{if component "gun1"
			{call "update_gun"}
			{tags remove "gun1_brake"}
		}
	}
	{on "update_gun"
		{if work "gun"
			{weapon_work "gun" 1}
		else
			{weapon_work "gun" 0}
		}
		{if work "gun1"
			{weapon_work "gun1" 1}
		else
			{weapon_work "gun1" 0}
		}
	}
	{on ik begin "gun_rot"
		{kill_delay "rotate_gun"}
		{if not "rotate_gun"
			{play_sound "rotate_gun" 1}
			{set "rotate_gun" 1}
		}
	}
	{on ik end "gun_rot"
		{delay 0.25 "rotate_gun"
			{stop_sound "rotate_gun"}
			{set "rotate_gun" 0}
		}
	}
	{on ik begin "turret"
		{kill_delay "rotate_turret"}
		{if not "rotate_turret"
			{play_sound "rotate_turret" 1}
			{set "rotate_turret" 1}
		}
	}
	{on ik end "turret"
		{delay 0.25 "rotate_turret"
			{stop_sound "rotate_turret"}
			{set "rotate_turret" 0}
		}
	}
	{on crew out		;// stop turret rotation sound when crew leaves gunner seat
		{if not crew_in_place "gunner"
			{if "rotate_turret"
				{stop_sound "rotate_turret"}
			}
		}
	}
}

{"with_gun vehicle open_top"	;// Adds animation calls when aiming gun on open topped vehicles
	{on "pre_cookoff" 		;//prevents open top vehicles from cooking off while they dont have animation
		{tags add "ammo_broken"}
		{call "explosion"}
	}
	{on ik begin "gun_rot" overload
		{kill_delay "rotate_gun"}
		{if not "rotate_gun"
			{play_sound "rotate_gun" 1}
			{set "rotate_gun" 1}
			{ani_play "aim_v" loop resume}
		}
	}
	{on ik end "gun_rot" overload
		{delay 0.25 "rotate_gun"
			{stop_sound "rotate_gun"}
			{set "rotate_gun" 0}
			{ani_stop "aim_v"}
		}
	}
	{on ik begin "turret" overload
		{kill_delay "rotate_turret"}
		{if not "rotate_turret"
			{play_sound "rotate_turret" 1}
			{set "rotate_turret" 1}
			{ani_play "aim_h" loop resume}
		}
	}
	{on ik end "turret" overload
		{delay 0.25 "rotate_turret"
			{stop_sound "rotate_turret"}
			{set "rotate_turret" 0}
			{ani_stop "aim_h"}
		}
	}
}

{"with_gun vehicle no_cook"
	{on "pre_cookoff" 		;//prevents open top vehicles from cooking off while they dont have animation
		{tags add "ammo_broken"}
		{call "explosion"}
	}
}

{"vehicle multi_board"	;// used for vehicles like transport trucks where multiple crew/passengers use 1 door to board
	{on spawn
		{if tagged "door_open"
			{ani_wind "open_back" end}
		}
	}
	{on animation_event "board"
		{if tagged "door_open"
			{kill_delay "boarding"}
			{delay 5 "boarding"
				{if operatable
					{tags remove "door_open"}
					{ani_play "close_back" 1}
					{call "close"}
				}
			}
		else
			{ani_play "open_back" 1}
			{tags add "door_open"}
			{call "open"}
			{delay 5 "boarding"
				{if operatable
					{tags remove "door_open"}
					{ani_play "close_back" 1}
					{call "close"}
				}
			}
		}
	}
}

{"open_with_land"
	{on "open"
		{ani_stop "drift"}
		{ani_play "dooropen" callback}
		{land on}
		{chassis_work 0}
		{physics_work 0}
		{area enable}
	}
	{on "close"
		{ani_play "dooropen" -1 callback}
		{ani_play "drift" loop}
		{land off}
		{chassis_work 1}
		{physics_work 1}
		{area disable}
	}
	{on animation_end "dooropen"
		{update_visibility_patch}
	}
	{on animation_end "open_back"
		{update_visibility_patch}
	}
}

{"open_without_land"
	{on "open"
		{ani_stop "drift"}
		{ani_play "dooropen" callback}
	}
	{on "close"
		{ani_play "dooropen" -1 callback}
		{ani_play "drift" resume loop}
	}
	{on animation_end "dooropen"
		{update_visibility_patch}
	}
	{on animation_end "close_back"
		{update_visibility_patch}
	}
}

{"amphibia vehicle"
	{on spawn
		{add_view	"wash_ship_stop"	"on_stead"	"FX_bulb_small_center1"}
		{add_view	"wash_ship_stop"	"on_stead"	"FX_bulb_small_center2"}
		{add_view	"wash_ship_stop"	"on_stead"	"FX_bulb_small_center3"}
		{add_view	"wash_ship_stop"	"on_stead"	"FX_bulb_small_center4"}
		{add_view	"wash_ship_stop"	"on_stead"	"FX_bulb_small_center5"}
		{add_view	"wash_ship_stop"	"on_stead"	"FX_bulb_small_center6"}
		{add_view	"wash_ship_stop"	"on_stead"	"FX_bulb_small_center7"}
		{add_view	"wash_ship_stop"	"on_stead"	"FX_bulb_small_center8"}
		{add_view	"wash_ship_stop"	"on_stead"	"FX_bulb_small_center9"}
		{add_view	"wash_ship_stop"	"on_stead"	"FX_bulb_small_center10"}
		{add_view	"wash_ship_stop"	"on_stead"	"FX_bulb_norm_front1"}
		{add_view	"wash_ship_stop"	"on_stead"	"FX_bulb_norm_front2"}
		{add_view	"wash_ship_stop"	"on_stead"	"FX_bulb_norm_engine1"}
		{add_view	"wash_ship_motion"	"on_move"	"FX_bulb_small_center1"}
		{add_view	"wash_ship_motion"	"on_move"	"FX_bulb_small_center2"}
		{add_view	"wash_ship_motion"	"on_move"	"FX_bulb_small_center3"}
		{add_view	"wash_ship_motion"	"on_move"	"FX_bulb_small_center4"}
		{add_view	"wash_ship_motion"	"on_move"	"FX_bulb_small_center5"}
		{add_view	"wash_ship_motion"	"on_move"	"FX_bulb_small_center6"}
		{add_view	"wash_ship_motion"	"on_move"	"FX_bulb_small_center7"}
		{add_view	"wash_ship_motion"	"on_move"	"FX_bulb_small_center8"}
		{add_view	"wash_ship_motion"	"on_move"	"FX_bulb_small_center9"}
		{add_view	"wash_ship_motion"	"on_move"	"FX_bulb_small_center10"}
		{add_view	"wash_ship_motion"	"on_move"	"FX_bulb_small_back1"}
		{add_view	"wash_ship_motion"	"on_move"	"FX_bulb_small_back2"}
		{add_view	"wash_front_small"	"on_move"	"FX_bulb_small_front1"}
		{add_view	"wash_front_small"	"on_move"	"FX_bulb_small_front2"}
		{add_view	"wash_front_norm"	"on_move"	"FX_bulb_norm_front1"}
		{add_view	"wash_front_norm"	"on_move"	"FX_bulb_norm_front2"}
		{add_view	"wash_ship_motion_norm"	"on_move"	"FX_bulb_norm_front1"}
		{add_view	"wash_ship_motion_norm"	"on_move"	"FX_bulb_norm_front2"}
		{add_view	"wash_engine_small"		"on_move"	"FX_bulb_small_engine1"}
		{add_view	"wash_engine_norm"		"on_move"	"FX_bulb_norm_engine1"}
		{add_view	"wash_tank_prop"		"on_move"	"prop"}
		{add_view	"wash_tank_prop_idle"	"on_stead"	"prop"}
		{add_view	"wash_tank_prop"		"on_move"	"propeller1"}
		{add_view	"wash_tank_prop_idle"	"on_stead"	"propeller1"}
		{call "spawn_in_water"}
	}
	{on "spawn_in_water"
		{if tagged "water_chassis"
			{ani_wind "water" end}
		}
	}
	{on terrain_pp "deep_water" enter
		;{set "in_water" 1}
		{call "update_bulbs"}
	}
	{on terrain_pp "water" enter
		;{set "in_water" 1}
		{call "update_bulbs"}
	}
	{on terrain_pp "shallow_water" enter
		{set "in_water" 1}
		{call "update_bulbs"}
	}
	{on terrain_pp "shallow_water" leave
		;{set "in_water" 0}
		{call "update_bulbs"}
	}
	{on "update_bulbs"
		{if chassis "water"
			{if not velocity 0.001
				{view start "on_stead"}
				{view pause "on_move"}
				{ani_stop "move"}
			else
				{view start "on_move"}
				{ani_play "move" loop}
				{view pause "on_stead"}
			}
		else
			{view pause "on_stead"}
			{view pause "on_move"}
			{ani_stop "move"}
		}
		{call "deep_water_check"}
	}
	{on "deep_water_check"
		{if chassis "water"
			{if not tagged "water_chassis"
				{ani_play "water"}
				{tags add "water_chassis"}
			}
		else tagged "water_chassis"
			{ani_play "water" -1}
			{tags remove "water_chassis"}
		}
	}
	{on "check_water_level" overload}
	{on move on
		{call "update_bulbs"}
	}
	{on move off
		{delay 0.1
			{call "update_bulbs"}
		}
	}
}

{"flame vehicle"
	{on spawn
		{link_sound "start"		"weapon/shot/flame/vehicle/vehicle_flamer_start"}
		{link_sound "loop"		"weapon/shot/flame/vehicle/vehicle_flamer_loop"}
		{link_sound "end"		"weapon/shot/flame/vehicle/vehicle_flamer_stop"}
	}
	(define "flame_weapon"
		{on fire "%0" overload
			{spawn "fx_piece_flame_%1" "foresight%2" x
				{impulse forward %3 rnd_dir 0.01 com}
				{gravity 0.65}
				{linear_damping 0}
			}
			{view start "%0"}
			{delay 0.05
				{spawn "fx_piece_flame_%1" "foresight%2" x
					{impulse forward %3 rnd_dir 0.01 com}
					{gravity 0.65}
					{linear_damping 0}
				}
			}
			{delay 0.1
				{view pause "%0"}
			}
			{if tagged "firing"
				{if tagged "looping"
					{play_sound "loop" 1}
					{tags remove "looping"}
				}
			else
				{play_sound "start"}
				{tags add "looping"}
			}
			{tags add "firing"}
			{delay 0.125
				{tags remove "firing"}
				{tags remove "looping"}
				{play_sound "end"}
				{delay 0.05
					{stop_sound "loop"}
				}
			}
		}
	)
}
{"rocket vehicle"	;// disables rocket weaponry from working/firing while vehicle is moving
	(define "rocket_weapon"
		{on engine on
			{weapon_work "%0" 0}
		}
		{on engine off
			{if not tagged "%0_brake"
				{if work "%0"
					{weapon_work "%0" 1}
				}
			}
		}
	)
}
{"turn_over"
	{on "upside_down"				;// when vehicle flips over and crew is forced to emit
		{tags add "upside_down"}
		{area disable}
	}
	{on operatable on
		{if tagged "upside_down"
			{area enable}
			{tags remove "upside_down"}
		}
	}
	{on contact
		{if tagged "upside_down"
			{if not effector "human"
				{if not effector "stuff"
					{area enable}
				}
			}
		}
	}
}
{"blast_large"
	{on "_explosion_fx" overload}
	{on "explosion_blastwave" overload
		{blastwave c4 10 r0 7 r1 15 offset 0 0 50}
		{spawn "tank_die_medium" "basis"}
		{impulse up 2.5 1.5 dir 2 1}
	}
}
{"blast_medium"
	{on "_explosion_fx" overload}
	{on "explosion_blastwave" overload
		{blastwave c4 10 r0 6 r1 12 offset 0 0 25}
		{spawn "tank_die_light" "basis"}
		{impulse up 1.5 0.5 dir 2 1}
	}
}
{"blast_small"
	{on "_explosion_fx" overload}
	{on "explosion_blastwave" overload
		{blastwave c4 10 r0 4 r1 10 offset 0 0 25}
		{spawn "vehicle_die" "basis"}
		{impulse up 1.5 0.5 dir 2 1}
	}
}

{"support_open_ani"
	{on spawn
		{ani_wind "support_open" end}
	}
	{on move on
		{kill_delay "move_off"}
		{ani_play "support_open" -1.0 resume}
	}
	{on move off
		{delay 1 "move_off"
			{ani_play "support_open" 1.0 resume}
		}
	}
}

;/*=========== General Props End ===========*/

{"diesel"	;// alternate fuel type
	{on spawn
		{tags add "add_exhaustview"}
	}
	{on "add_exhaustview" overload
		{add_view	"exhaust_dark_big_diesel"		"exhaust"			   "FXsmoke1"} ;// engine exhaust
		{add_view	"exhaust_dark_big_diesel"		"exhaust"			   "FXsmoke2"} ;// engine exhaust
		;{add_view	"exhaust_dark_small2_diesel"	"exhaust2"			   "FXsmoke1"} ;// idle exhaust
		;{add_view	"exhaust_dark_small2_diesel"	"exhaust2"			   "FXsmoke2"} ;// idle exhaust
		{add_view	"exhaust_dark_small2"			"exhaust2"			   "FXsmoke1"} ;// idle exhaust
		{add_view	"exhaust_dark_small2"			"exhaust2"			   "FXsmoke2"} ;// idle exhaust
	}
}
{"whotel_east"
	{on spawn overload
		{ik_enable "turret_ik_damage2" 0}
		{ik_enable "turret_ik_damage" 0}
		{ik_enable "gun_ik_damage" 0}	
		;{set "idle" 0}
		;{ani_play 	"engine" loop}
		{link_sound "turret_rotate_damage" 	"vehicle/whotel/turret/damage"			}
		{link_sound "turret_rotate" 		"vehicle/turret/turret_lr"						}
		{link_sound "turret_end" 			"vehicle/whotel/turret_end/stop"			}
		{link_sound "turret_start" 			"vehicle/whotel/turret_start/start"			}
		{link_sound "gun_rotate" 			"vehicle/whotel/gun/ik_loop"				}
		{link_sound "alarm" 				"vehicle/whotel/alarm/marked"				}



		{link_sound "starter"			"vehicle/whotel/open/iw8_recondrone_marking3"}
		{link_sound "starter_failed"	"vehicle/engine/starter/failed"}
		{link_sound "steering"			"vehicle/turret/mortar_vert"}
		{link_sound "steering_end"		"vehicle/turret/mortar_vert_end"}
		{link_sound "start"				"vehicle/engine/ve_small_start"}
		{link_sound "brake"				"vehicle/brakes/brake_small/dirt"}
		{link_sound "brake_road"		"vehicle/brakes/brake_small/road"}
		{link_sound "brake_sand"		"vehicle/brakes/brake_small/sand"}
		{link_sound "brake_short"		"vehicle/brakes/brake_small/short"}
		{link_sound "engine_end"		"vehicle/engine/ve_small_shutdown"}
		{link_sound "move_broken"		"vehicle/broken/stage1"}
		{link_sound "move_broken2"		"vehicle/broken/stage2"}
		{link_sound "move" 				"vehicle/whotel/move/dirt_roll_fast_lp"				}

		
		{link_sound "engine" 			"vehicle/whotel/engine_idle/engine_idle"					}		
		{link_sound "move_engine" 		"vehicle/whotel/engine_work/engine_work"				}
		{link_sound "move_end"			"vehicle/whotel/engine_end/engine_end"}
		{link_sound "exhaust" 			"vehicle/whotel/engine_up/engine_up"				}


		{add_view 	"fx_lamp_red"							"light_main"			"stop_light_r_glass"}
		{add_view 	"fx_lamp_red"							"light_main"			"stop_light_l_glass"}
		{add_view 	"fx_lamp_red"							"light_main"			"back_right_leds"}
		{add_view 	"fx_lamp_red"							"light_main"			"back_right_leds"}
		{add_view 	"headlight_car_led"						"light_main"			"headlightR_m"}
		{add_view 	"headlight_car_led"						"light_main"			"headlightL_m"}
		{add_view 	"headlight_car_led"						"light_second"			"headlightL_s_f"}
		{add_view 	"headlight_car_led"						"light_second"			"headlightR_s_f"}
		{add_view	"stop_signal"							"stop_signal"			"stop_light_r_glass"}
		{add_view	"stop_signal"							"stop_signal"			"stop_light_l_glass"}


		{add_view	"exhaust_dark_small_car_start"			"exhaust_start"			"fx_smoke"}
		{add_view	"exhaust_dark_small_car_start"			"exhaust_move_hot"		"fx_smoke"}
		{add_view	"exhaust_dark_small_car_move"			"exhaust_move"			"fx_smoke"}
		{add_view	"exhaust_dark_small_car_idle"			"exhaust_idle"			"fx_smoke"}

		{add_view	"smoke_bats"		"servomotor_broken"			"turret"}
		{add_view	"smoke_dead_small3"		"servomotor_broken2"			"turret"}

		{add_view 	"smoke_heat_barrel" 		"smoke" 		"fxshell"}
		{add_view 	"smoke_heat_barrel2" 		"smoke_recoil" 	"recoil"}
		{add_view 	"smoke_heat_barrel" 		"smoke" 		"foresight1"}
		{add_view 	"muzzle_front_shotgun" 		"fx_muzzle" 	"foresight1"}

		{add_view "laser_sight_add_tactical_laser"				"autotarget"		"rangefinder"}
		{add_view "laser_sight_tactical_laser"					"autotarget"		"rangefinder"}


		{view hide	"fautotarget"}
		{view stop	"autotarget"}
		{view hide	"light_main"}
		{view stop	"light_main"}
		{view hide	"light_second"}
		{view stop	"light_second"}
		{view hide	"stop_signal"}
		{view stop	"stop_signal"}

		{bone hide	"body_blood_stage1"}
		{bone hide	"body_misc_stage1"}
		{bone hide	"body_blood_stage2"}
		{bone hide	"body_blood_stage3"}
		(define "spawn_wound"
			{bone hide "%0_steel_wound"}
			{bone hide "%0_blood_wound"}	
			{bone hide "%0_misc_wound"}	
		)
		("spawn_wound" args ammobox )
		("spawn_wound" args front_arm_r )
		("spawn_wound" args front_arm_l )
		("spawn_wound" args wingl1 )
		("spawn_wound" args wingl2 )
		("spawn_wound" args wingl3 )
		("spawn_wound" args wingl4 )
		("spawn_wound" args wingl5 )
		("spawn_wound" args wingr1 )
		("spawn_wound" args wingr2 )
		("spawn_wound" args wingr3 )
		("spawn_wound" args wingr4 )
		("spawn_wound" args wingr5 )

		;{add_view 	""			"exhaust"		"fx_smoke"}
		;{link_sound "" 			""				}
		;{link_sound "" 			""				}

		;{add_view	""		""			""}
		;{view hide	""}
		;{view pause	""}
		{delay 2 1
			{start_sound "vehicle/whotel/open/"}
			{call "start_engine"}
		}
	}
	{on operatable on overload
		{delay 1.5
			{bone show	"front_sm_glass_r_4_add"}
			{bone show	"front_sm_glass_r_2_add"}
			{bone show	"front_sm_glass_l_4_add"}
			{bone show	"front_sm_glass_l_2_add"}
		}
	}
	{on operatable off overload
		{call "lights_off"}
		{bone hide	"front_sm_glass_r_4_add"}
		{bone hide	"front_sm_glass_r_2_add"}
		{bone hide	"front_sm_glass_l_4_add"}
		{bone hide	"front_sm_glass_l_2_add"}
	}
	{on "open_light" overload
		{if tagged "die_battery"
			{if "engine_started"
				{tags remove "die_battery"}
			}
		}
		{if not tagged "die_battery"
			{delay 0.2
				{if not tagged "light_on_s" 
					{tags add "light_on"}
					{if not tagged "light_on_m"
						{tags add "light_on_m"}
						{delay 0.5
							{start_sound "vehicle/light/"}
							{view start	"light_main"}
							{view show	"light_main"}
						}
					else not tagged "light_on_s"
						{tags add "light_on_s"}
						{delay 0.5
							{start_sound "vehicle/light/"}
							{view start	"light_second"}
							{view show	"light_second"}
						}
					}
				}
			}
		else 
			{tags remove "light_on_s"}
			{tags remove "light_on"}
			{view stop	"light_second"}
			{view hide	"light_second"}
			{start_sound "vehicle/light/"}
			{delay 0.3
				{tags remove "light_on_m"}
				{start_sound "vehicle/light/"}
				{view stop	"light_main"}
				{view hide	"light_main"}
				{tags add "light_off"}
			}
		}
	}
	{on "open_light_sunlight" overload
		{if tagged "light_update" 
			{tags add "light_on"}
			{tags add "light_on_m"}
			{view start	"light_main"}
			{view show	"light_main"}
			{tags add "light_on_s"}
			{view start	"light_second"}
			{view show	"light_second"}
			{tags add "light_on_b"}
			{start_sound "vehicle/light/"}
		}
	}
	{on "lights_off" overload
		{tags remove "light_on_s"}
		{start_sound "vehicle/light/"}
		{view stop	"light_second"}
		{view hide	"light_second"}
		{delay 0.2
			{tags remove "light_on_m"}
			{start_sound "vehicle/light/"}
			{tags remove "light_on"}
			{view stop	"light_main"}
			{view hide	"light_main"}
			{tags add "light_off"}
		}
	}

	{on "stop_on"
		{ani_stop "start"}
		{if velocity 40
			{ani_play "stop_fast"}
		else
			{ani_play "stop"}
		}
		{view show "stop_signal"}
		{view start "stop_signal"}
		{delay 1
			{view hide "stop_signal"}
		}
	}
	{on turn on
		{play_sound "turn"}
	}
	{on turn off
		{call "exhaust_off"}
	}
	{on "leave_unit"
		{impulse up 4 2 dir 4 2 cx 4 2 cy 4 2 rnd_dir 2 no_position}
	}
	{on "check_work_mover" overload
		{if tagged "wheel_teared"
			{chassis_work 0}
		else
			{if not work "mover"
				{chassis_work 0}
			else broken "wheel" 3
				{chassis_work 0}
			else broken "wheel" 2
				{chassis_work 1}
				{movement_limit slow}
			else
				{chassis_work 1}
				{movement_limit fast}
			}
		}
	}
	{on move on
		{if broken "disk" 2
			{play_sound "move_broken2" 1}
		else broken "disk" 1
			{play_sound "move_broken" 1}
		else 
			{stop_sound "move_broken2"}
			{stop_sound "move_broken"}
		}
		{call "stop_idle"}
		{stop_sound "move_end"}
		{play_sound "move" 1}
		{call "exhaust_on"}
		{ani_play "start"}
		{ani_stop "stop"}
		{delay 1 "move"
			{play_sound "move_engine" 1}
			{tags add "ik_restore"}
			{ani_play "move" loop}
		}
	}
	{on move off
		{play_sound "move_end"}
		{delay 0.5 "move_end"
			{stop_sound "move_engine"}
		}
		{tags remove "ik_restore"}
		{kill_delay "move"}
		{ani_stop "move"}
		{stop_sound "move"}
		{stop_sound "move_broken2"}
		{stop_sound "move_broken"}
		{call "exhaust_off"}
	}
	{on "exhaust_on"
		{play_sound "exhaust"}
		{view start "exhaust_move"}
	}
	{on "exhaust_off"
		{stop_sound "exhaust"}
		{view pause "exhaust_move"}
	}	
	{on accelerate on
		{call "exhaust_on"}
	}
	{on accelerate off
		{call "exhaust_off"}
	}
	{on brake on
		{if velocity 25
			(define "terrain_fx"
				{if terrain_fx %0 
					{play_sound "brake_%1"}
				}
			)
			("terrain_fx" args "ground" 						ground 			 	)
			("terrain_fx" args "grass" 							ground 			 	)
			("terrain_fx" args "road" 							road 		 	)
			("terrain_fx" args "country_road" 					road 			 	)
			("terrain_fx" args "sand" 							sand 			 	)
			("terrain_fx" args "snow" 							ground 			 	)
			("terrain_fx" args "water" 							water 			 	)
			("terrain_fx" args "bridge" 						road 			   )
			("terrain_fx" args "bridge_wood" 					road		   )
			("terrain_fx" args "floor" 							road 			   )
			("terrain_fx" args "rock" 							ground 			   )
			("terrain_fx" args "metal" 							road 			   )
			("terrain_fx" args "shoot_emit_mtl" 				road 			 )
			("terrain_fx" args "shoot_emit_ext_sand" 			sand 			 )
			("terrain_fx" args "shoot_emit_ext" 				ground 			 )
			("terrain_fx" args "shoot_emit_int" 				ground 			 )
		else
			{play_sound "brake_short"}
		}
		{call "stop_on"}
	}
	{on "start_engine" overload
		{if not "engine_started"
			{if tagged "die_battery"
				{play_sound "starter_failed" }
				{view start "exhaust_start"} ; 1
				{delay 0.2
					{view pause "exhaust_start"}
					{delay 1.2
						{view start "exhaust_start"} ; 2
						{delay 0.2
							{view pause "exhaust_start"}
							{delay 1.3
								{view start "exhaust_start"} ; 3
								{delay 0.2
									{view pause "exhaust_start"}
									{delay 1.2
										{view start "exhaust_start"} ; 4
										{delay 0.2
											{view pause "exhaust_start"} ; 5
										}
									}
								}
							}
						}
					}
				}
			}
		}
		{if not tagged "die_battery"
			{if not "engine_started"
				{play_sound "starter" }
				{view start "exhaust_cold"}
				{delay 0.8
					{tags add "manual_start"}
					{tags remove "die_battery"}
					{ani_play "start_engine"}
					{view pause "exhaust_cold"}
					{set "engine_started" 1}
					{delay 0.2
						{if rand 0.2
							{spawn "fuel_sparks" "FXsmoke" x}
						}
						{view start "exhaust"}
						{delay 0.2
							{view pause "exhaust_start"}
							{delay 0.2
								{view start "exhaust_start"}
								{stop_sound "starter" }
								{play_sound "start"  }
								{delay 0.2
									{view pause "exhaust_start"}
									{delay 0.2
										{view start "exhaust_start"}
										{delay 0.2
											{view start "exhaust_idle"}
											{play_sound "engine" 1}
											{view pause "exhaust_start"}
										}
									}
								}
							}
						}
					}
					{delay 4 "engine_starts"
						{chassis_work 1}
					}
				}
			else
				{ani_stop "move"}
				{ani_stop "work"}
				{ani_stop "work_engine"}
				{delay 2 "engine_stopped"
					{bone hide	"back_light_dxo"}
					{bone hide	"front_light_l2_dxo_add"}
					{bone hide	"front_light_r2_dxo_add"}
					{view pause "exhaust"}
					{set "engine_started" 0}
					{stop_sound "engine"}
					{play_sound "engine_end"}
					{view pause "exhaust_idle"}
				}
			}
		}
	}
	{on engine on overload
		{set "engine_started" 1}
		{view start "exhaust_start"}
		{kill_delay "engine_stopped"}
		{kill_delay "engine_steam_stopped"}
		{stop_sound "engine_end"}
		{play_sound "engine" 1}
		{delay 1
			{view pause "exhaust_start"}
			{view start "exhaust_idle"}
		}
	}
	{on engine off overload
		;{if not tagged "manual_start"
		;	{ani_stop "work"}
		;	{ani_stop "move"}
		;	{delay 2 "engine_stopped"
		;		{set "engine_started" 0}
		;		{stop_sound "engine"}
		;		{play_sound "engine_end"}
		;	}
		;	{delay 12 "engine_steam_stopped"
		;		{view pause "exhaust_idle"}
		;	}
		;}
	}
	{on ik begin "turret_link"
		{play_sound "turret_start"}
		{call "pierce_cables"}
		{play_sound "turret_rotate" 1}
	}
	{on ik end "turret_link"
		{stop_sound "turret_start"}
		{stop_sound "turret_rotate"}
		{if rand 0.1
			{play_sound "alarm"}
		}
		{play_sound "turret_end"}
	}
	{on ik begin "turret_ik_damage"
		{call "pierce_cables"}
		{play_sound "turret_start"}
		{play_sound "turret_rotate_damage" 1}
		{play_sound "turret_rotate" 1}
	}
	{on ik end "turret_ik_damage"
		{stop_sound "turret_start"}
		{stop_sound "turret_rotate"}
		{stop_sound "turret_rotate_damage"}
		{if rand 0.1
			{play_sound "alarm"}
		}
		{play_sound "turret_end"}
	}
	{on ik begin "turret_ik_damage2"
		{view start "servomotor_broken2"}
		{play_sound "turret_rotate_damage" 1}
	}
	{on ik end "turret_ik_damage2"
		{view pause "servomotor_broken2"}
		{stop_sound "turret_rotate_damage"}
	}
	{on ik begin "gun_link"
		{kill_delay "gun_link"}
		{play_sound "gun_rotate"}
	}
	{on ik end "gun_link"
		{stop_sound "gun_rotate"}
		{delay 2 "gun_link"
			{if rand 0.1
				{play_sound "alarm"}
			}
		}
	}
;	{on ik begin "turret"
;		{play_sound ""}
;	}
;	{on ik end "turret"
;	}
	{on "stop_idle"
		{set "idle" 0}
		{ani_stop "idle"}
		{ani_stop "idle2"}
	}
	{on "idle"
		{set "idle" 1}
		{if not "blocked"
			{delay 1 -0.5 "detect"
				{play_sound "detect"}
			}
			{if rand 0.4
				{call "rand_idle01"}
			 else rand 0.35
				{call "rand_idle02"}
			 else
				{call "rand_idle03"}
			}
		}
	}
	{on "safe-idle"
		{if "idle"
			{call "idle"}
		}
	}
	{on "start-idle"
		{set "idle" 1}
		{delay_effect 1 "safe-idle"}
	}
	{on animation_end "idle"
		{play_sound "detect"}
		{delay_effect 15 8 "safe-idle"}
	}
	{on fire "gun" 
		{if tagged "shoot_emitters_ext"
			{if not effector "silenced"
				{start_sound "shoot_emitters_ext/rocketlauncher"}
			}		
		}		
		{if tagged "shoot_emitters_int"
			{if not effector "silenced"
				{start_sound "shoot_emitters_int/mgun"}
			}		
		}		
		{if tagged "shoot_emitters_mtl"
			{if not effector "silenced"
				{start_sound "shoot_emitters_ext/rocketlauncher"}
			}		
		}		
		{spawn "smoke_shotgun_shell" "fx_eject" x}
		{view start "fx_muzzle"}
		{burn volume "gun" fx "rex_emitters_fence" time 1 fake even_law}
		{delay 0.03 "fire"
			{view start "smoke"}
			{view start "smoke_recoil"}
			{view hide	"fx_muzzle"}
			{view pause	"fx_muzzle"}
		}
		{delay 2 0.5
			{view pause "smoke_recoil"}
		}
		{delay 3 1
			{view pause "smoke"}
		}
		{delay 0.05
			{start_sound "vehicle/whotel/mech/"}	
		}
		{if tagged "loaded" 	
			{tags remove "loaded"}
		}
		{spawn "xm109_shell" "fxshell" z
			{impulse up 2 0.5 forward 1 0.5 cx 2 1 com  }
			;{gravity 1}
		}
		;{kill_delay "shoot"}
		;{bone show	""}
		;{delay 1 "shoot"
		;	{bone hide	""}
		;}
		{ani_play "recoil"}
	}
	{on fire "mgun1" overload
		(define "smokescreen" ;
			{bone hide "smokeshell%tag"}
			{spawn "smoke_shell_l5" "smokeshell%tag" x}
			{spawn "startsmoke_caps" "smokeshell%tag" x}
			{delay 120 
				{bone show "smokeshell%tag"}
			}
		)
		("smokescreen" tag(00) )
		("smokescreen" tag(01) )
		("smokescreen" tag(02) )
		("smokescreen" tag(03) )
		("smokescreen" tag(04) )
		("smokescreen" tag(05) )
		("smokescreen" tag(06) )
		("smokescreen" tag(07) )
	}
	{on fire "mgun2"
		{spawn "detect" "detect" x
			{impulse dir 60 rnd_dir 1}
		}
		{view start	"autotarget"}
		{delay 1
			{view pause "autotarget"}
		}
	}
	{on fire "mgun3"
		{chassis_work 0}
		{ani_play "stand" 1}
		{for_each_link
			{delay_effect 0.3 "stand"}
		}
		{delay 1
			{start_sound "push/deployable_cover/plant/"}
			{for_each_link
				{spawn "spheredust_small" "stake_right_fx"}		
				{spawn "spheredust_small" "stake_centr_fx"}		
				{spawn "spheredust_small" "stake_left_fx"}		
			}
		}
		{delay 1
			{chassis_work 1}
		}
	}
	{on "explosion"
		{if not able "exploded"
			{able "exploded" 1}
			{call "_explosion"}
		}
	}
	{on "_explosion" overload
		{for_each_link
			{delay_effect 0 "break_blast"}			
		}
		(define "spawn_wound"
			{bone show "%0_steel_wound"}
			{bone show "%0_misc_wound"}	
		)
		("spawn_wound" args ammobox )
		("spawn_wound" args front_arm_r )
		("spawn_wound" args front_arm_l )
		("spawn_wound" args wingl1 )
		("spawn_wound" args wingl2 )
		("spawn_wound" args wingl3 )
		("spawn_wound" args wingl4 )
		("spawn_wound" args wingl5 )
		("spawn_wound" args wingr1 )
		("spawn_wound" args wingr2 )
		("spawn_wound" args wingr3 )
		("spawn_wound" args wingr4 )
		("spawn_wound" args wingr5 )
		{bone hide "wire_visor"}
		{bone hide "wire"}
		{bone hide "wire_arm"}
		{bone hide "wire_antenna"}
		{bone hide "wire_cpu"}	
		{reset_manual_control}
		{call "lights_off"}
		{call "stop_idle"}
		{set "blocked" 1}
		{call "break_all"}
		{stop_sound "move"}
		{stop_sound "move_end"}
		{stop_sound "engine"}
		{stop_sound "engine_end"}
		{stop_sound "exhaust"}
		{view stop "autotarget"}
		{view stop "exhaust_start"}
		{view stop "exhaust_move_hot"}
		{view stop "exhaust_move"}
		{view stop "exhaust_idle"}
		{view stop "fire1"}
		{view stop "fire2"}
		{tags add "destroyed"}
		{start_sound "crush/medium/vehicle"}
		{delay_ex 0
			{set "no_burn_volumes" 1}
			;{call "cut_parts"}
		}
	}
	{on "blast_body"
		{if min_energy 40
			{impulse up 1.5 0.5 dir 1.5 0.5}
		else min_energy 25
			{impulse up 0.8 0.3 dir 0.8 0.3}
		}
		{call "explosion"}
	}
	{on "break_all" overload
		{burn volume fx "smoke_dead_wheel" time 12 fake even_law}
		(define "cut_part"
			{if rand %1
				{spawn "metal_crush" %0}
				{tear "piece_medium_steel" bone %0
					{impulse up 1 0.5 dir 1 0.5}
				}
			}
		)			
		("cut_part" args "turret"				0.3)
		("cut_part" args "wheelright1"			0.2)
		("cut_part" args "wheelright2"			0.2)
		("cut_part" args "wheelright3"			0.2)
		("cut_part" args "wheelleft1"			0.2)
		("cut_part" args "wheelleft2"			0.2)
		("cut_part" args "wheelleft3"			0.2)
		("cut_part" args "wingr1"			0.4)
		("cut_part" args "wingr2"			0.4)
		("cut_part" args "wingr3"			0.4)
		("cut_part" args "wingr4"			0.4)
		("cut_part" args "wingr5"			0.4)
		("cut_part" args "wingl1"			0.4)
		("cut_part" args "wingl2"			0.4)
		("cut_part" args "wingl3"			0.4)
		("cut_part" args "wingl4"			0.4)
		("cut_part" args "wingl5"			0.4)

		("cut_part" args "wingl_rub1"			0.9)
		("cut_part" args "wingl_rub2"			0.9)
		("cut_part" args "wingl_rub3"			0.9)
		("cut_part" args "wingl_rub4"			0.9)
		("cut_part" args "wingl_rub5"			0.9)
		("cut_part" args "wingl_rub6"			0.9)
		("cut_part" args "wingl_rub7"			0.9)
		("cut_part" args "wingl_rub8"			0.9)
		("cut_part" args "wingl_rub9"			0.9)
		("cut_part" args "wingl_rub10"			0.9)
		("cut_part" args "wingl_rub11"			0.9)
		("cut_part" args "wingl_rub12"			0.9)

		("cut_part" args "wingr_rub1"			0.9)
		("cut_part" args "wingr_rub2"			0.9)
		("cut_part" args "wingr_rub3"			0.9)
		("cut_part" args "wingr_rub4"			0.9)
		("cut_part" args "wingr_rub5"			0.9)
		("cut_part" args "wingr_rub6"			0.9)
		("cut_part" args "wingr_rub7"			0.9)
		("cut_part" args "wingr_rub8"			0.9)
		("cut_part" args "wingr_rub9"			0.9)
		("cut_part" args "wingr_rub10"			0.9)
		("cut_part" args "wingr_rub11"			0.9)
		("cut_part" args "wingr_rub12"			0.9)

		("cut_part" args "cpu"				0.4)
		("cut_part" args "ammobox"			0.4)
		("cut_part" args "gun"				0.4)
		("cut_part" args "antenna"			0.2)
		("cut_part" args "antenna2"			0.2)
		("cut_part" args "arm_box"			0.4)
		("cut_part" args "exshaut"			0.4)		
		{call "die"}		
	}
	
	{on "kill_crew" overload
		{reset_manual_control}
		{drop_orders}
		{components destroy}
		{auto_operatable 0}
		{set "blocked" 1}
		{call "stop_idle"}
		{ani_stop "idle"}
	}
	{on "die" overload
		{reset_manual_control}
		{able select 0}
		{able repaired 0}
;		{explosive 1}
		{player -1}
		{stat_notify leave}
		{kick_entity_manager}
		{drop_orders}
		{components destroy}
		{auto_operatable 0}
		{set "blocked" 1}
		{call "stop_idle"}
		{ani_stop "idle"}
	}
	{on "tear_wheel" overload
		{tags add "wheel_teared"}
		{spawn "ex_wheel"}
		{component break}
		{tear "piece_medium_steel" bone from_volume id "wheel"
			{impulse up 2 1 dir 3 2}
			{add_view "smoke_dead_wheel" "smoke" "basis"}
			{view start "smoke"}
			{delay_effect 2 1 "pause"}
		}
		{impulse up 0.3}
		{call "check_work_mover"}
	}
	{on ground_hit
		{if contact_velocity 20
			(define "contact_wound"
				{if rand 0.2
					{if volume "%0"
						{if not tagged "%0_steel_wound" 
							{spawn	"spheredust_norm" }
							{tags add "%0_steel_wound"}
							{bone show "%0_steel_wound"}
						}
					}
				}
			)
			("contact_wound" args ammobox )
			("contact_wound" args front_arm_r )
			("contact_wound" args front_arm_l )
			("contact_wound" args wingl1 )
			("contact_wound" args wingl2 )
			("contact_wound" args wingl3 )
			("contact_wound" args wingl4 )
			("contact_wound" args wingl5 )
			("contact_wound" args wingr1 )
			("contact_wound" args wingr2 )
			("contact_wound" args wingr3 )
			("contact_wound" args wingr4 )
			("contact_wound" args wingr5 )
			{if volume "wheel"
				(define "terrain_fx"
					{if terrain_fx %0 
						{play_sound "brake_%1"}
					}
				)
				("terrain_fx" args "ground" 						ground 			 	)
				("terrain_fx" args "grass" 							ground 			 	)
				("terrain_fx" args "road" 							road 		 	)
				("terrain_fx" args "country_road" 					road 			 	)
				("terrain_fx" args "sand" 							sand 			 	)
				("terrain_fx" args "snow" 							ground 			 	)
				("terrain_fx" args "water" 							water 			 	)
				("terrain_fx" args "bridge" 						road 			   )
				("terrain_fx" args "bridge_wood" 					road		   )
				("terrain_fx" args "floor" 							road 			   )
				("terrain_fx" args "rock" 							ground 			   )
				("terrain_fx" args "metal" 							road 			   )
				("terrain_fx" args "shoot_emit_mtl" 				road 			 )
				("terrain_fx" args "shoot_emit_ext_sand" 			sand 			 )
				("terrain_fx" args "shoot_emit_ext" 				ground 			 )
				("terrain_fx" args "shoot_emit_int" 				ground 			 )
			else
				{play_sound "brake_short"}
			}
		}
	}
	{on contact
		{if not impregnable
			{if velocity 65
				{if effector "human"
					(define "contact_wound"
						{if rand 0.8
							{if volume "%0"
								{if not tagged "%0_blood_wound" 
									{tags add "%0_blood_wound"}
									{bone show "%0_blood_wound"}
								}
							}
						}
					)
					("contact_wound" args ammobox )
					("contact_wound" args front_arm_r )
					("contact_wound" args front_arm_l )
					("contact_wound" args wingl1 )
					("contact_wound" args wingl2 )
					("contact_wound" args wingl3 )
					("contact_wound" args wingl4 )
					("contact_wound" args wingl5 )
					("contact_wound" args wingr1 )
					("contact_wound" args wingr2 )
					("contact_wound" args wingr3 )
					("contact_wound" args wingr4 )
					("contact_wound" args wingr5 )
					{if volume "body"
						{impulse up 0}
						{if rand 0.2
							{spawn "spheredust_small"}
							{if tagged "stage2_wound_blood" 
								{if not tagged "stage3_wound_blood" 
									{tags add "stage3_wound_blood"}
									{bone show "body_blood_stage3"}
								}
							}
						}
						{if rand 0.3
							{spawn "spheredust_small"}
							{if tagged "stage1_wound_blood" 
								{if not tagged "stage2_wound_blood" 
									{tags add "stage2_wound_blood"}
									{bone show "body_blood_stage2"}
								}
							}
						}
						{if rand 0.6
							{spawn "spheredust_small"}
							{if not tagged "stage1_wound_blood" 
								{tags add "stage1_wound_blood"}
								{bone show "body_blood_stage1"}
							}
						}
					}
					{if volume "small_lamp_glass"
						{spawn "lamp_hit_sm_bullet" volume x}
						{delay_ex 0.1 uniq
							{bone cut}
						}
					}
					{if volume "part"
						{if rand 0.3
							{tear "piece_small_steel" bone from_volume
								{spawn	"spheredust_norm" }
								{impulse up 0.5 0.2 dir 1.5 cx 2 1 cy 2 1 rnd_dir 2 no_position}
							}
						}
					}
					{if volume "wing"
						{if rand 0.1
							{tear "piece_small_steel" bone from_volume
								{spawn	"spheredust_norm" }
								{impulse up 0.5 0.2 dir 1.5 cx 2 1 cy 2 1 rnd_dir 2 no_position}
							}
						}
					}
					{if volume "rubber_part"
						{if rand 0.7
							{tear "piece_small_misc" bone from_volume
								{spawn	"spheredust_norm" }
								{impulse up 1.5 0.2 dir 1.5 cx 2 1 cy 2 1 rnd_dir 2 no_position}
							}
						}
					}
				}
				{if effector "tank"
					{impulse up 0}
					(define "contact_wound"
						{if rand 0.7
							{if volume "%0"
								{if not tagged "%0_steel_wound" 
									{tags add "%0_steel_wound"}
									{bone show "%0_steel_wound"}
								}
							}
						}
					)
					("contact_wound" args ammobox )
					("contact_wound" args front_arm_r )
					("contact_wound" args front_arm_l )
					("contact_wound" args wingl1 )
					("contact_wound" args wingl2 )
					("contact_wound" args wingl3 )
					("contact_wound" args wingl4 )
					("contact_wound" args wingl5 )
					("contact_wound" args wingr1 )
					("contact_wound" args wingr2 )
					("contact_wound" args wingr3 )
					("contact_wound" args wingr4 )
					("contact_wound" args wingr5 )
					{spawn	"spheredust_norm" }
					{if volume "wheel"
						{if rand 0.1
							{call "tear_wheel"}
						}
					}
					{if volume "part"
						{if rand 0.5
							{spawn	"spheredust_norm" }
							{tear "piece_small_steel" bone from_volume
								{impulse up 0.5 0.2 dir 1.5 cx 2 1 cy 2 1 rnd_dir 2 no_position}
							}
						}
					}
					{if volume "rubber_part"
						{if rand 0.7
							{spawn	"spheredust_norm" }
							{tear "piece_small_misc" bone from_volume
								{impulse up 0.5 0.2 dir 1.5 cx 2 1 cy 2 1 rnd_dir 2 no_position}
							}
						}
					}
				}
				{if effector "construction"
					{impulse cx 0.001}
					{spawn	"spheredust_norm" }
					(define "contact_wound"
						{if rand 0.3
							{if volume "%0"
								{if not tagged "%0_steel_wound" 
									{tags add "%0_steel_wound"}
									{bone show "%0_steel_wound"}
								}
							}
						}
					)
					("contact_wound" args ammobox )
					("contact_wound" args front_arm_r )
					("contact_wound" args front_arm_l )
					("contact_wound" args wingl1 )
					("contact_wound" args wingl2 )
					("contact_wound" args wingl3 )
					("contact_wound" args wingl4 )
					("contact_wound" args wingl5 )
					("contact_wound" args wingr1 )
					("contact_wound" args wingr2 )
					("contact_wound" args wingr3 )
					("contact_wound" args wingr4 )
					("contact_wound" args wingr5 )
					{if volume "wheel"
						{if rand 0.1
							{call "tear_wheel"}
						}
					}
					{if volume "part"
						{if rand 0.5
							{spawn	"spheredust_norm" }
							{tear "piece_small_steel" bone from_volume
								{impulse up 0.5 0.2 dir 1.5 cx 2 1 cy 2 1 rnd_dir 2 no_position}
							}
						}
					}
					{if volume "rubber_part"
						{if rand 0.7
							{spawn	"spheredust_norm" }
							{tear "piece_small_misc" bone from_volume
								{impulse up 0.5 0.2 dir 1.5 cx 2 1 cy 2 1 rnd_dir 2 no_position}
							}
						}
					}
				}
				{if effector "big_build"
					{impulse cx 0.001}
					{spawn	"spheredust_norm" }
					(define "contact_wound"
						{if rand 0.7
							{if volume "%0"
								{if not tagged "%0_steel_wound" 
									{tags add "%0_steel_wound"}
									{bone show "%0_steel_wound"}
								}
							}
						}
					)
					("contact_wound" args ammobox )
					("contact_wound" args front_arm_r )
					("contact_wound" args front_arm_l )
					("contact_wound" args wingl1 )
					("contact_wound" args wingl2 )
					("contact_wound" args wingl3 )
					("contact_wound" args wingl4 )
					("contact_wound" args wingl5 )
					("contact_wound" args wingr1 )
					("contact_wound" args wingr2 )
					("contact_wound" args wingr3 )
					("contact_wound" args wingr4 )
					("contact_wound" args wingr5 )
					{if volume "wheel"
						{if rand 0.1
							{call "tear_wheel"}
						}
					}
					{if volume "part"
						{if rand 0.5
							{spawn	"spheredust_norm" }
							{tear "piece_small_steel" bone from_volume
								{impulse up 0.5 0.2 dir 1.5 cx 2 1 cy 2 1 rnd_dir 2 no_position}
							}
						}
					}
					{if volume "rubber_part"
						{if rand 0.7
							{spawn	"spheredust_norm" }
							{tear "piece_small_misc" bone from_volume
								{impulse up 0.5 0.2 dir 1.5 cx 2 1 cy 2 1 rnd_dir 2 no_position}
							}
						}
					}
				}
				{if effector "fence"
					{impulse cx 0.001}
					{if volume "body"
						{if rand 0.4
							{spawn "spheredust_small"}
							{if not tagged "stage1_wound_misc" 
								{tags add "stage1_wound_misc"}
								{bone show "body_misc_stage1"}
							}
						}
					}
					(define "contact_wound"
						{if rand 0.7
							{if volume "%0"
								{if not tagged "%0_steel_wound" 
									{tags add "%0_steel_wound"}
									{bone show "%0_steel_wound"}
								}
							}
						}
					)
					("contact_wound" args ammobox )
					("contact_wound" args front_arm_r )
					("contact_wound" args front_arm_l )
					("contact_wound" args wingl1 )
					("contact_wound" args wingl2 )
					("contact_wound" args wingl3 )
					("contact_wound" args wingl4 )
					("contact_wound" args wingl5 )
					("contact_wound" args wingr1 )
					("contact_wound" args wingr2 )
					("contact_wound" args wingr3 )
					("contact_wound" args wingr4 )
					("contact_wound" args wingr5 )
				}
				{if effector "stuff"
					{if volume "body"
						{if rand 0.4
							{spawn "spheredust_small"}
							{if not tagged "stage1_wound_misc" 
								{tags add "stage1_wound_misc"}
								{bone show "body_misc_stage1"}
							}
						}
					}
					(define "contact_wound"
						{if rand 0.1
							{if volume "%0"
								{if not tagged "%0_misc_wound" 
									{tags add "%0_misc_wound"}
									{bone show "%0_misc_wound"}
								}
							}
						}
					)
					("contact_wound" args ammobox )
					("contact_wound" args front_arm_r )
					("contact_wound" args front_arm_l )
					("contact_wound" args wingl1 )
					("contact_wound" args wingl2 )
					("contact_wound" args wingl3 )
					("contact_wound" args wingl4 )
					("contact_wound" args wingl5 )
					("contact_wound" args wingr1 )
					("contact_wound" args wingr2 )
					("contact_wound" args wingr3 )
					("contact_wound" args wingr4 )
					("contact_wound" args wingr5 )
				}
				{if effector "car"
					{impulse cx 0.001}
					{spawn "spheredust_small"}
					(define "contact_wound"
						{if rand 0.1
							{if volume "%0"
								{if not tagged "%0_steel_wound" 
									{tags add "%0_steel_wound"}
									{bone show "%0_steel_wound"}
								}
							}
						}
					)
					("contact_wound" args ammobox )
					("contact_wound" args front_arm_r )
					("contact_wound" args front_arm_l )
					("contact_wound" args wingl1 )
					("contact_wound" args wingl2 )
					("contact_wound" args wingl3 )
					("contact_wound" args wingl4 )
					("contact_wound" args wingl5 )
					("contact_wound" args wingr1 )
					("contact_wound" args wingr2 )
					("contact_wound" args wingr3 )
					("contact_wound" args wingr4 )
					("contact_wound" args wingr5 )
					{if volume "wheel"
						{if rand 0.05
							{call "tear_wheel"}
						}
					}
					{if volume "part"
						{if rand 0.1
							{spawn	"spheredust_norm" }
							{tear "piece_small_steel" bone from_volume
								{impulse up 0.5 0.2 dir 1.5 cx 2 1 cy 2 1 rnd_dir 2 no_position}
							}
						}
					}
					{if volume "rubber_part"
						{if rand 0.3
							{spawn	"spheredust_norm" }
							{tear "piece_small_misc" bone from_volume
								{impulse up 0.5 0.2 dir 1.5 cx 2 1 cy 2 1 rnd_dir 2 no_position}
							}
						}
					}
				}
				{if effector "toyota_armor"
					{impulse cx 0.001}
					{spawn	"spheredust_norm" }
					{if volume "part"
						{if rand 0.5
							{spawn	"spheredust_norm" }
							{tear "piece_small_steel" bone from_volume
								{impulse up 0.5 0.2 dir 1.5 cx 2 1 cy 2 1 rnd_dir 2 no_position}
							}
						}
					}
					{if volume "rubber_part"
						{if rand 0.7
							{spawn	"spheredust_norm" }
							{tear "piece_small_misc" bone from_volume
								{impulse up 0.5 0.2 dir 1.5 cx 2 1 cy 2 1 rnd_dir 2 no_position}
							}
						}
					}
				}
			else velocity 40
				{if effector "human"
					(define "contact_wound"
						{if rand 0.6
							{if volume "%0"
								{if not tagged "%0_blood_wound" 
									{tags add "%0_blood_wound"}
									{bone show "%0_blood_wound"}
								}
							}
						}
					)
					("contact_wound" args ammobox )
					("contact_wound" args front_arm_r )
					("contact_wound" args front_arm_l )
					("contact_wound" args wingl1 )
					("contact_wound" args wingl2 )
					("contact_wound" args wingl3 )
					("contact_wound" args wingl4 )
					("contact_wound" args wingl5 )
					("contact_wound" args wingr1 )
					("contact_wound" args wingr2 )
					("contact_wound" args wingr3 )
					("contact_wound" args wingr4 )
					("contact_wound" args wingr5 )
					{if volume "body"
						{if rand 0.2
							{spawn "spheredust_small"}
							{if tagged "stage2_wound_blood" 
								{if not tagged "stage3_wound_blood" 
									{tags add "stage3_wound_blood"}
									{bone show "body_blood_stage3"}
								}
							}
						}
						{if rand 0.3
							{spawn "spheredust_small"}
							{if tagged "stage1_wound_blood" 
								{if not tagged "stage2_wound_blood" 
									{tags add "stage2_wound_blood"}
									{bone show "body_blood_stage2"}
								}
							}
						}
						{if rand 0.6
							{spawn "spheredust_small"}
							{if not tagged "stage1_wound_blood" 
								{tags add "stage1_wound_blood"}
								{bone show "body_blood_stage1"}
							}
						}
					}
					{if volume "part"
						{if rand 0.3
							{tear "piece_small_steel" bone from_volume
								{spawn	"spheredust_norm" }
								{impulse up 0.5 0.2 dir 1.5 cx 2 1 cy 2 1 rnd_dir 2 no_position}
							}
						}
					}
					{if volume "wing"
						{if rand 0.1
							{tear "piece_small_steel" bone from_volume
								{spawn	"spheredust_norm" }
								{impulse up 0.5 0.2 dir 1.5 cx 2 1 cy 2 1 rnd_dir 2 no_position}
							}
						}
					}
					{if volume "rubber_part"
						{if rand 0.7
							{tear "piece_small_misc" bone from_volume
								{spawn	"spheredust_norm" }
								{impulse up 1.5 0.2 dir 1.5 cx 2 1 cy 2 1 rnd_dir 2 no_position}
							}
						}
					}
				}
				{if effector "tank"
					(define "contact_wound"
						{if rand 0.6
							{if volume "%0"
								{if not tagged "%0_steel_wound" 
									{tags add "%0_steel_wound"}
									{bone show "%0_steel_wound"}
								}
							}
						}
					)
					("contact_wound" args ammobox )
					("contact_wound" args front_arm_r )
					("contact_wound" args front_arm_l )
					("contact_wound" args wingl1 )
					("contact_wound" args wingl2 )
					("contact_wound" args wingl3 )
					("contact_wound" args wingl4 )
					("contact_wound" args wingl5 )
					("contact_wound" args wingr1 )
					("contact_wound" args wingr2 )
					("contact_wound" args wingr3 )
					("contact_wound" args wingr4 )
					("contact_wound" args wingr5 )
					{spawn	"spheredust_norm" }
					{if volume "wheel"
						{if rand 0.1
							{call "tear_wheel"}
						}
					}
					{if volume "part"
						{if rand 0.5
							{spawn	"spheredust_norm" }
							{tear "piece_small_steel" bone from_volume
								{impulse up 0.5 0.2 dir 1.5 cx 2 1 cy 2 1 rnd_dir 2 no_position}
							}
						}
					}
					{if volume "rubber_part"
						{if rand 0.7
							{spawn	"spheredust_norm" }
							{tear "piece_small_misc" bone from_volume
								{impulse up 0.5 0.2 dir 1.5 cx 2 1 cy 2 1 rnd_dir 2 no_position}
							}
						}
					}
				}
				{if effector "construction"
					{spawn	"spheredust_norm" }
					(define "contact_wound"
						{if rand 0.3
							{if volume "%0"
								{if not tagged "%0_steel_wound" 
									{tags add "%0_steel_wound"}
									{bone show "%0_steel_wound"}
								}
							}
						}
					)
					("contact_wound" args ammobox )
					("contact_wound" args front_arm_r )
					("contact_wound" args front_arm_l )
					("contact_wound" args wingl1 )
					("contact_wound" args wingl2 )
					("contact_wound" args wingl3 )
					("contact_wound" args wingl4 )
					("contact_wound" args wingl5 )
					("contact_wound" args wingr1 )
					("contact_wound" args wingr2 )
					("contact_wound" args wingr3 )
					("contact_wound" args wingr4 )
					("contact_wound" args wingr5 )
					{if volume "wheel"
						{if rand 0.01
							{call "tear_wheel"}
						}
					}
					{if volume "part"
						{if rand 0.5
							{spawn	"spheredust_norm" }
							{tear "piece_small_steel" bone from_volume
								{impulse up 0.5 0.2 dir 1.5 cx 2 1 cy 2 1 rnd_dir 2 no_position}
							}
						}
					}
					{if volume "rubber_part"
						{if rand 0.7
							{spawn	"spheredust_norm" }
							{tear "piece_small_misc" bone from_volume
								{impulse up 0.5 0.2 dir 1.5 cx 2 1 cy 2 1 rnd_dir 2 no_position}
							}
						}
					}
				}
				{if effector "big_build"
					{spawn	"spheredust_norm" }
					(define "contact_wound"
						{if rand 0.7
							{if volume "%0"
								{if not tagged "%0_steel_wound" 
									{tags add "%0_steel_wound"}
									{bone show "%0_steel_wound"}
								}
							}
						}
					)
					("contact_wound" args ammobox )
					("contact_wound" args front_arm_r )
					("contact_wound" args front_arm_l )
					("contact_wound" args wingl1 )
					("contact_wound" args wingl2 )
					("contact_wound" args wingl3 )
					("contact_wound" args wingl4 )
					("contact_wound" args wingl5 )
					("contact_wound" args wingr1 )
					("contact_wound" args wingr2 )
					("contact_wound" args wingr3 )
					("contact_wound" args wingr4 )
					("contact_wound" args wingr5 )
					{if volume "wheel"
						{if rand 0.03
							{call "tear_wheel"}
						}
					}
					{if volume "part"
						{if rand 0.5
							{spawn	"spheredust_norm" }
							{tear "piece_small_steel" bone from_volume
								{impulse up 0.5 0.2 dir 1.5 cx 2 1 cy 2 1 rnd_dir 2 no_position}
							}
						}
					}
					{if volume "rubber_part"
						{if rand 0.7
							{spawn	"spheredust_norm" }
							{tear "piece_small_misc" bone from_volume
								{impulse up 0.5 0.2 dir 1.5 cx 2 1 cy 2 1 rnd_dir 2 no_position}
							}
						}
					}
				}
				{if effector "fence"
					{if volume "body"
						{if rand 0.4
							{spawn "spheredust_small"}
							{if not tagged "stage1_wound_misc" 
								{tags add "stage1_wound_misc"}
								{bone show "body_misc_stage1"}
							}
						}
					}
					(define "contact_wound"
						{if rand 0.7
							{if volume "%0"
								{if not tagged "%0_steel_wound" 
									{tags add "%0_steel_wound"}
									{bone show "%0_steel_wound"}
								}
							}
						}
					)
					("contact_wound" args ammobox )
					("contact_wound" args front_arm_r )
					("contact_wound" args front_arm_l )
					("contact_wound" args wingl1 )
					("contact_wound" args wingl2 )
					("contact_wound" args wingl3 )
					("contact_wound" args wingl4 )
					("contact_wound" args wingl5 )
					("contact_wound" args wingr1 )
					("contact_wound" args wingr2 )
					("contact_wound" args wingr3 )
					("contact_wound" args wingr4 )
					("contact_wound" args wingr5 )
				}
				{if effector "stuff"
					{if volume "body"
						{if rand 0.4
							{spawn "spheredust_small"}
							{if not tagged "stage1_wound_misc" 
								{tags add "stage1_wound_misc"}
								{bone show "body_misc_stage1"}
							}
						}
					}
					(define "contact_wound"
						{if rand 0.1
							{if volume "%0"
								{if not tagged "%0_misc_wound" 
									{tags add "%0_misc_wound"}
									{bone show "%0_misc_wound"}
								}
							}
						}
					)
					("contact_wound" args ammobox )
					("contact_wound" args front_arm_r )
					("contact_wound" args front_arm_l )
					("contact_wound" args wingl1 )
					("contact_wound" args wingl2 )
					("contact_wound" args wingl3 )
					("contact_wound" args wingl4 )
					("contact_wound" args wingl5 )
					("contact_wound" args wingr1 )
					("contact_wound" args wingr2 )
					("contact_wound" args wingr3 )
					("contact_wound" args wingr4 )
					("contact_wound" args wingr5 )
				}
				{if effector "car"
					{spawn "spheredust_small"}
					(define "contact_wound"
						{if rand 0.1
							{if volume "%0"
								{if not tagged "%0_steel_wound" 
									{tags add "%0_steel_wound"}
									{bone show "%0_steel_wound"}
								}
							}
						}
					)
					("contact_wound" args ammobox )
					("contact_wound" args front_arm_r )
					("contact_wound" args front_arm_l )
					("contact_wound" args wingl1 )
					("contact_wound" args wingl2 )
					("contact_wound" args wingl3 )
					("contact_wound" args wingl4 )
					("contact_wound" args wingl5 )
					("contact_wound" args wingr1 )
					("contact_wound" args wingr2 )
					("contact_wound" args wingr3 )
					("contact_wound" args wingr4 )
					("contact_wound" args wingr5 )
					{if volume "wheel"
						{if rand 0.01
							{call "tear_wheel"}
						}
					}
					{if volume "part"
						{if rand 0.1
							{spawn	"spheredust_norm" }
							{tear "piece_small_steel" bone from_volume
								{impulse up 0.5 0.2 dir 1.5 cx 2 1 cy 2 1 rnd_dir 2 no_position}
							}
						}
					}
					{if volume "rubber_part"
						{if rand 0.3
							{spawn	"spheredust_norm" }
							{tear "piece_small_misc" bone from_volume
								{impulse up 0.5 0.2 dir 1.5 cx 2 1 cy 2 1 rnd_dir 2 no_position}
							}
						}
					}
				}
				{if effector "toyota_armor"
					{impulse cx 0.001}
					{spawn	"spheredust_norm" }
					{if volume "part"
						{if rand 0.5
							{spawn	"spheredust_norm" }
							{tear "piece_small_steel" bone from_volume
								{impulse up 0.5 0.2 dir 1.5 cx 2 1 cy 2 1 rnd_dir 2 no_position}
							}
						}
					}
					{if volume "rubber_part"
						{if rand 0.7
							{spawn	"spheredust_norm" }
							{tear "piece_small_misc" bone from_volume
								{impulse up 0.5 0.2 dir 1.5 cx 2 1 cy 2 1 rnd_dir 2 no_position}
							}
						}
					}
				}
			else velocity 10
				{spawn	"spheredust_small_short_smsteel" }
			}
		}
	}
	{on "pierce_cables"
		{if tagged "turr_jummed"	
			{if rand 0.2
				{spawn "ex_cables" "fx_turret_spark00"}
			}
			{delay 0.9
				{spawn "ex_cables" "fx_turret_spark02"}
				{ik_enable "turret_ik_damage" 0}
				{ik_enable "turret_ik_damage2" 1}
			}
			{delay 3.5 2
				{ik_enable "turret_ik_damage" 0}
				{ik_enable "turret_ik_damage2" 1}
				{spawn "ex_tv" "fx_turret_spark01"}
			}
		}
	}
	{on blast_hit
		{if stuff "orientation_gun_check" 
			(define "check_ik"
				{if volume "%0"
					{tags add "%0"} 
					{delay 1
						{tags remove "%0"} 
					}				
					{ani_play "%0"} 
				}
			)	
			("check_ik" args front_hit )
			("check_ik" args back_hit )
			("check_ik" args left_hit )
			("check_ik" args right_hit )
			("check_ik" args front_left_hit )
			("check_ik" args front_right_hit )
			("check_ik" args back_left_hit )
			("check_ik" args back_right_hit )
		}
		{if min_energy 1.5
			{if volume "glass"
				{call "break_glass"}
			}
			{if volume "sm_glass"
				{call "break_glass"}
			}
		}
		{call "stop_idle"}
		{if min_energy 30
			{impulse up 1 0.1 dir 2 0.1}
			{call "_explosion"}
		else min_energy 9
			{impulse up 0.5 0.2 dir 1 0.2}
			{call "_burn"}
		else min_energy 4
			{if volume "rubber_part"
				{if rand 0.7		
					{tear "piece_small_misc" bone from_volume
						{impulse up 2 1 dir 2 1 cx 4 2 cy 4 2 rnd_dir 2 no_position}
					}	
				}	
			}
			{if volume "wheel"
				{if rand 0.3		
					{call "tear_wheel"}
				}
			}
			{if volume "body"
				{if rand 0.06
					{burn fx "smoke_aero_small" time 2 fake}
					;{spawn "" ""}
					{components "engine" break}
					{call "_burn"}
				else stuff "shell"
					{components "engine" break}
					{burn fx "smoke_aero_small" time 2 fake}
					{if rand 0.6
						{call "_burn"}
					}
				}
			}
			{if volume "engine"
				{if rand 0.05
					{burn fx "smoke_aero_small" time 2 fake}
					{spawn "ex_cables" "engine"}
					{components "engine" break}
					{call "_burn"}
				else stuff "shell"
					{components "engine" break}
					{burn fx "smoke_aero_small" time 2 fake}
					{if rand 0.6
						{call "_burn_"}
					}
				}
			}
			{if volume "servomotor"
				{if rand 0.6
					{if not tagged "turr_jummed"
						{tags add "turr_jummed"}
						{call "pierce_cables"}
						{spawn "ex_cables" "fx_turret_spark00"}
						{view start "fx_broken_cables"}
						{delay 6.5 1 "smoke"
							{view pause "fx_broken_cables"}
						}
					}
				}
			}
			;{impulse up 0.4 0.1 dir 0.7 0.2}
			{if rand 0.1 {call "break_all"}}
		else min_energy 1
			{ani_play "stop"}
		}
	}
	{on pierce sync
		{if volume "rubber_part"
			{if rand 0.7		
				{tear "piece_small_misc" bone from_volume
					{impulse up 2 1 dir 2 1 cx 4 2 cy 4 2 rnd_dir 2 no_position}
				}	
			}	
		}
		{if volume "engine"
			{if rand 0.05
				{burn fx "smoke_aero_small" time 2 fake}
				{spawn "ex_cables" "fx_hit_cables"}
				{components "engine" break}
				{call "_burn"}
			else stuff "hmgun"
				{if rand 0.1
					{burn fx "smoke_aero_small" time 2 fake}
					{components "engine" break}
					{call "_burn"}
				}
			else stuff "shell"
				{components "engine" break}
				{burn fx "smoke_aero_small" time 2 fake}
				{if rand 0.6
					{call "_burn"}
				}
			}
		else volume "servomotor"
			{if rand 0.2
				{components "servomotor" break}
				{spawn "spheredust_big_short" "turret" }		
				{burn fx "smoke_aero_small" time 5 fake}
			}
		else volume "visor"
			{if rand 0.3
				{bone hide "wire_visor"}
				{spawn "metal_crush" }
				{tear "piece_medium_steel" bone from_volume
					{impulse up 2 1 dir 1 cx 5 2 cy 5 2 rnd_dir -4 no_position}
				}
			}
		}
		{if stuff "atgm_launcher"
			{call "blast_body"}
		}
		{if stuff "rocketlauncher"
			{if volume "engine_set"
				{components "engine" break}
				{call "_burn"}
			else volume "body"
				{call "blast_body"}
			else volume "engine"
				{components "engine" break}
				{call "_burn"}
			else volume "turret"
				{call "tear_turret"}
			else volume "glass"
				{call "blast_body"}
			}
		}
		{if stuff "ammo grenade fg"
			{if volume "engine_set"
				{call "blast_body"}
			else volume "body"
				{call "blast_body"}
			else volume "engine"
				{call "blast_body"}
			else volume "turret"
				{call "tear_turret"}
			else volume "glass"
				{call "blast_body"}
			else volume "wheel"
				{call "blast_body"}
			}
		}
	}
	{on break
		{if component "body"
			{spawn "car_die_particle"}
		else component "servomotor"
			{ik_enable "turret_link" 0}
			{tags add "turr_jummed"}
			{spawn "ex_cables" "fx_turret_spark00"}
			{view start "servomotor_broken"}
			{delay 2.5 1
				{ik_enable "turret_ik_damage" 1}
				{spawn "ex_cables" "fx_turret_spark01"}	
			}
			{delay 6.5 1 "smoke"
				{spawn "ex_cables" "fx_turret_spark02"}
				{view pause "servomotor_broken"}
			}
		else component "wheel"
			{delay 2 "engine_stopped"
				{view pause "exhaust"}
				{set "engine_started" 0}
				{stop_sound "engine"}
				{play_sound "engine_end"}
				{view pause "exhaust_idle"}
			}	
		else component "engine"
			{call "lights_off"}
			{spawn "car_die_particle"}
			{view start "smoke2"}
			{delay 21 {view stop "smoke2"}}
			{if rand 0.2
				{call "_burn"}
			}			
		}
	}
	{on break_armor
		(define "break_armor"
			{if component %0
				{if rand 0.1
					{if not tagged %1
						{if velocity 40
							{if rand 0.2
								{components %2 destroy}
								{tear "piece_medium_tire" bone %2
									{impulse up 5 2 dir 12 2 cx 8 2 cy 8 2 rnd_dir 8 no_position}
								}	
								{call "check_work_mover"}
							}
						}
						{start_sound "vehicle/suspension_brake/"}
						{damage_report "body" "component/disk"}
						{ani_play "wheell_blast"}
						{ani_play %1 1}
						{tags add %1}
						{burn volume %0 fx "dust_small" time 1 fake even_law}
						{movement_limit slow}
						{component break}
					}
				}
			}
		)
		("break_armor" args "wheelleft1_disk" "wheell1_b" "wheelleft1")
		("break_armor" args "wheelleft2_disk" "wheell2_b"  "wheelleft2")
		("break_armor" args "wheelright1_disk" "wheelr1_b"  "wheelright1")
		("break_armor" args "wheelright2_disk" "wheelr2_b"  "wheelright2")
		("break_armor" args "wheelleft3_disk" "wheell3_b"  "wheelleft3")
		("break_armor" args "wheelright3_disk" "wheelr3_b"  "wheelright3")
		(define "break_armor_tire"
			{if component %0
				{if rand 0.4
					{if not tagged %1
						{if velocity 50
							{if rand 0.2
								{component destroy}
								{tear "piece_medium_tire" bone %2
									{impulse up 5 2 dir 12 2 cx 8 2 cy 8 2 rnd_dir 8 no_position}
								}	
								{call "check_work_mover"}
							}
						}
						{start_sound "detonation/tire"}
						{burn volume fx "dust_small" time 1 fake even_law}
						{burn fx "wheel_hit" time 2}				
						{tags add %1}
						{movement_limit slow}
						{component break}
					}
				}
			}
		)
		("break_armor_tire" args "wheelleft1" "wheell1_b_tire" 		"wheelleft1" )
		("break_armor_tire" args "wheelleft2" "wheell2_b_tire"  	"wheelleft2" )
		("break_armor_tire" args "wheelright1" "wheelr1_b_tire"   	"wheelright1" )
		("break_armor_tire" args "wheelright2" "wheelr2_b_tire"    "wheelright2")
		("break_armor_tire" args "wheelleft3" "wheell3_b_tire"  	"wheelleft3" )
		("break_armor_tire" args "wheelright3" "wheelr3_b_tire"    "wheelright3")
		{if name "pierce"
			{if volume "fuel"
				{call "pierce_fuel"}
			}
		else name "blast"
			{if volume "body"
				{call "blast_body"}
			else volume "inventory"
				{call "blast_body"}
			else volume "engine"
				{if min_energy 6
					{call "blast_body"}
				else
					{if rand 0.5
						{call "blast_body"}
					}
				}
			}
		}
	}

	{on break_armor_again
		{if name "blast"
			{if volume "body"
				{call "blast_body"}
			else volume "inventory"
				{call "blast_body"}
			else volume "engine"
				{call "blast_body"}
			}
		}
	}
	{on bullet_hit 
		{call "stop_idle"}
	}
	{on "tear_turret"
		{if not "turret_teared"
			{set "turret_teared" 1}
			{bone hide "headlightR_s_f_glass"}
			{bone hide "headlightL_s_f_glass"}
			{bone hide "headlightR_s_f"}
			{bone hide "headlightL_s_f"}
			{bone hide "thermal_screen"}
			{bone hide "thermal_screen_scanlines"}
			{components "turret" destroy}
			{call "mp_destroy"}
			{add_view "smoke_black_big5" "smoke_turret" "basis"}
			{view start "smoke_turret"}
			{delay 25 5
				{view stop "smoke_turret"}
			}
			{delay_ex 0
				{tear "piece_large_steel" bone "turret" id "turret"
					{impulse dir 0.5 1}
					{if rand 0.2
						{add_view "smoke_dead_norm" "smoke" "basis"}
					else
						{add_view "smoke_black" "smoke" "basis"}
					}
					{view start "smoke"}
					{delay_effect 25 5 "pause"}
				}
			}
		}
	}
}
{"check_back_hatch" 
	{on ik begin "turret_link"
		{call "check_limits"}
	}
	{on ik end "turret_link"
		{kill_delay "check_limits"}	
	}
	{on ik begin "gun_link"
		{call "check_limits"}
	}
	{on ik end "gun_link"
		{kill_delay "check_limits"}	
	}
	{on "check_limits"
		{spawn "orientation_gun_ik" "check_limits_link" } 
		{delay_effect 0.1 "check_limits"}
	}
	{on blast sync 
		{if stuff "orientation_gun_ik" 
			{if volume "check_limits"
				{if not tagged "upper"
					{tags add "upper"}
					{start_sound "vehicle/turret/gun_v/start/small2_start"}	
					{ani_play "maingun_up" +0.9 resume }
				}
			else volume "check_limits_restore"
				{if tagged "upper"
					{tags remove "upper"}
					{start_sound "vehicle/turret/gun_v/start/small2_start"}	
					{ani_play "maingun_up" -0.5 resume}
				}				
			}				
		}
	}
}



{"orientation_gun" 
	{on fire "gun" 
		;{if prop "small_auto"
		;	{if not tagged "move" 
		;		{impulse dir -0.3 com  }			
		;	}
		;}
		; {if prop "heavy"
			; {if rand 0.5
				; {if not tagged "move" 
					; ;{start_sound "rex_emitters/emitters_car/"}
					; ;{impulse up 0 dir 5 forward 10 com  fx 25 cx 4 2 cy 4 2 rnd_dir 1}	
					; {impulse dir -2 1 com  }
				; }
			; }
		; }
		{spawn "orientation_gun_check" "check_ik" } 
	} 
	{on blast 
		{if stuff "orientation_gun_check" 
			(define "check_ik"
				{if volume "%0"
					{tags add "%0"} 
					{delay 1
						{tags remove "%0"} 
					}				
					{if prop "artilery" 
						{start_sound "rex_emitters/emitters_car/"}
					}
					{ani_play "%0"} 
				}
			)	
			("check_ik" args front_hit )
			("check_ik" args back_hit )
			("check_ik" args left_hit )
			("check_ik" args right_hit )
			("check_ik" args front_left_hit )
			("check_ik" args front_right_hit )
			("check_ik" args back_left_hit )
			("check_ik" args back_right_hit )
		}
	}
}

{"orientation_gun_fast" 
	{on blast 
		{if stuff "orientation_gun_check" 
			(define "check_ik"
				{if tagged "bucket"
					;{kill_delay "recoil_heavy%0"}
					{if volume "%0"
						{if not tagged "recoil_heavy%0"				
							{ani_play "%0" +0.4 resume callback }
							{tags add "recoil_heavy%0"}
						}
					}
					{if tagged "recoil_heavy%0"			
						{delay 0.1
							{tags remove "restore"}
							{tags remove "recoil_heavy%0"}
							{if not tagged "restore"				
								{ani_stop "recoil_heavy" }
								{ani_play "%0" -12 resume callback }
								{tags add "restore"}
							}
						}
					}
				else
					;{kill_delay "recoil_heavy%0"}
					{if volume "%0"
						{if not tagged "recoil_heavy%0"				
							{ani_play "%0" +2 resume callback }
							{tags add "recoil_heavy%0"}
						}
					}
					{if tagged "recoil_heavy%0"			
						{delay 0.1
							{tags remove "restore"}
							{tags remove "recoil_heavy%0"}
							{if not tagged "restore"				
								{ani_stop "recoil_heavy" }
								{ani_play "%0" -12 resume callback }
								{tags add "restore"}
							}
						}
					}
				}
			)	
			("check_ik" args front_hit )
			("check_ik" args back_hit )
			("check_ik" args left_hit )
			("check_ik" args right_hit )
			("check_ik" args front_left_hit )
			("check_ik" args front_right_hit )
			("check_ik" args back_left_hit )
			("check_ik" args back_right_hit )
		}
	}
	{on fire "gun" 
		{spawn "orientation_gun_check" "check_ik" } 
	}
}
{"orientation_gun_mg" 
	{on animation_event "recoil_end"
		{tags add "recoil_end"}
	}
	{on blast 
		{if stuff "orientation_gun_check" 
			(define "check_ik"
				{if volume "%0"
					{if not tagged "recoil_mg_%0"				
						{if tagged "recoil_end"				
							{ani_play "%0_end" resume loop}					
						else
							{ani_play "%0" +0.1 resume callback }
							{tags add "recoil_mg_%0"}
						}	
					}
				}
				{delay 0.15
					{if tagged "recoil_mg_%0"			
						{ani_stop "%0_end" }					
						{tags remove "restore"}
						{tags remove "recoil_mg_%0"}
						{if not tagged "restore"				
							{ani_play "%0" -2 resume callback }
							{tags add "restore"}
						}
					}
				}
			)	
			("check_ik" args front_hit )
			("check_ik" args back_hit )
			("check_ik" args left_hit )
			("check_ik" args right_hit )
			("check_ik" args front_left_hit )
			("check_ik" args front_right_hit )
			("check_ik" args back_left_hit )
			("check_ik" args back_right_hit )
		}
	}
	{on fire "mgun" 		
		{delay 1
			{tags remove "recoil_end"}
		}
		{spawn "orientation_gun_check" "check_ik" } 
	}
}



{"one_stage_light"
	{on operatable on overload
		{if not tagged "die_battery"
			{delay 1.5
				{view start	"light_operatable"}
				{view show	"light_operatable"}
;				{bone show	""}
			}
		}
	}
	{on operatable off overload
		{call "lights_off"}
		{view hide	"light_operatable"}
		{view stop	"light_operatable"}
;		{bone hide	""}
	}
	{on "open_light" overload
		{if tagged "die_battery"
			{if "engine_started"
				{tags remove "die_battery"}
			}
		}
		{if not tagged "die_battery"
			{if not tagged "light_on_m" 
				{tags add "light_on"}
				{tags add "light_on_m"}
				{delay 0.5
					{start_sound "vehicle/light/"}
					{view start	"light_main"}
					{view show	"light_main"}
					{bone show	"front_light_r_1_add"}
					{bone show	"front_light_l_1_add"}
					{bone show	"glass_f_m_l_add"}
					{bone show	"glass_f_m_r_add"}
					{bone show	"glass_b_m_l_add"}
					{bone show	"glass_b_m_r_add"}
				}
			else 
				{delay 0.1
					{bone hide	"front_light_r_1_add"}
					{bone hide	"front_light_l_1_add"}
					{bone hide	"glass_f_m_l_add"}
					{bone hide	"glass_f_m_r_add"}
					{bone hide	"back_left_leds"}
					{bone hide	"back_right_leds"}
					{bone hide	"back_left_leds_add"}
					{bone hide	"back_right_leds_add"}
					{tags remove "light_on_m"}
					{start_sound "vehicle/light/"}
					{view stop	"light_main"}
					{view hide	"light_main"}
					{tags add "light_off"}
				}
			}
		}
	}
	{on "open_light_sunlight" overload
		{if tagged "light_update" 
			{tags add "light_on"}
			{tags add "light_on_m"}
			{view start	"light_main"}
			{view show	"light_main"}
			{tags add "light_on_s"}
			{view start	"light_second"}
			{view show	"light_second"}
			{bone show	"front_light_l_1_add"}
			{bone show	"front_light_r_1_add"}
			{bone show	"glass_f_m_l_add"}
			{bone show	"glass_f_m_r_add"}
			{bone show	"glass_b_m_l_add"}
			{bone show	"glass_b_m_r_add"}
			{if operatable
				{start_sound "vehicle/light/"}
			}
		}
	}
	{on "lights_off" overload
		{delay 0.1
			{tags remove "light_on_m"}
			{if operatable
				{start_sound "vehicle/light/"}
			}
			{bone hide	"back_left_leds"}
			{bone hide	"back_right_leds"}
			{tags remove "light_on"}
			{view stop	"light_main"}
			{view hide	"light_main"}
			{tags add "light_off"}
		}
	}
}

{"hook_burned"
	{on "_burn" overload
		{call "_burn_stage"}
	}
}

{"civilian"
	{on spawn
		{link_sound "alarm1"		"vehicle/alarm/alarm1"}
		{link_sound "alarm2"		"vehicle/alarm/alarm2"}
		{link_sound "alarm3"		"vehicle/alarm/alarm3"}
		{link_sound "alarm4"		"vehicle/alarm/alarm4"}
	
	}
	{on crew in
		{tags add "crew"}
	}
	{on blast
		{if not tagged "crew"
			{if rand 0.2 
				{call "alarm"}
			else rand 0.2 
				{call "break_alarm"}
			}
		}
	}
	{on ground_hit
		{if velocity 20
			{if not tagged "crew"
				{if rand 0.3 
					{call "alarm"}
				}
			}
		}
	}
	{on bullet_hit
		{if not stuff "detect"
			{if not tagged "crew"
				{if rand 0.2 
					{call "alarm"}
				else rand 0.2 
					{call "break_alarm"}
				}
			}
		}
	}
	{on contact
		{if velocity 5
			{if not tagged "crew"
				{if rand 0.5 
					{call "alarm"}
				}
			}
		}
	}
	{on "break_alarm"
		{if tagged "alarm"
			{start_sound "generation_zero/electric_spark/"}			
			{tags remove "warm_signal"}
			{stop_sound "alarm1" }			
			{stop_sound "alarm2" }			
			{stop_sound "alarm3" }			
			{stop_sound "alarm4" }			
			{call "warm_signal"}
			{delay 5
				{tags remove "alarm"}
			}
		}
	}
	{on "alarm"
		{if not tagged "alarm"
			{tags add "warm_signal"}
			{tags add "alarm"}
			{call "warm_signal"}
			{if rand 0.4 
				{play_sound "alarm1" 1}
			else rand 0.3 
				{play_sound "alarm2" 1}
			else rand 0.2 
				{play_sound "alarm3" 1}
			else
				{play_sound "alarm4" 1}			
			}
			{delay 120 60
				{tags remove "warm_signal"}
				{stop_sound "alarm1" }			
				{stop_sound "alarm2" }			
				{stop_sound "alarm3" }			
				{stop_sound "alarm4" }			
			}
		}
	}
	{on "warm_signal"
		{if tagged "warm_signal"
			{view show "alarm_f"}
			{view start "alarm_f"}
			{bone show	"warm_glass_r_ems"}
			{bone show	"warm_glass_l_ems"}
			{bone show	"warm_light_l"}
			{bone show	"warm_light_r"}
			{delay 0.3
				{bone hide	"warm_glass_r_ems"}
				{bone hide	"warm_glass_l_ems"}
				{bone hide	"warm_light_l"}
				{bone hide	"warm_light_r"}
				{view hide "alarm_f"}
				{view pause "alarm_f"}
			}
			{delay_effect 1 
				"warm_signal"
			}
		else
			{kill_delay "warm_signal"}			
		}
	}
	{on "explosion"
		{stop_sound "alarm1" }			
		{stop_sound "alarm2" }			
		{stop_sound "alarm3" }			
		{stop_sound "alarm4" }			
	}
	{on "burn_volume"
		{delay 3 1
			{stop_sound "alarm1" }			
			{stop_sound "alarm2" }			
			{stop_sound "alarm3" }			
			{stop_sound "alarm4" }			
		}
	}
}


{"no_scavenge"
	{on spawn
		{tags add "no_scavenge"}
	}
}
{"no_recrew_logic"
	{on spawn
		{tags add "_no-recrew"} ;// used by AI mission scripts to not allow AI to recrew abandoned motorcycles
	}
}
{"td"}						;// used for minimap icons
{"spg"}						;// used for minimap icons
{"sandbag_tank_near"}		;// used for constructor
{"sandbag_tank_far"}		;// used for constructor
{"cannon_sandbag_small"}	;// used for constructor
{"cannon_sandbag_standard"}	;// used for constructor
{"no_sandbags"}				;// used for constructor
